{
  "version": 4,
  "terraform_version": "1.1.7",
  "serial": 86,
  "lineage": "46102ee4-c4e8-2a00-80b2-92dfbbe1dbc4",
  "outputs": {
    "acr_id": {
      "value": "/subscriptions/a4d33dc9-3b4e-470f-8024-10592c821737/resourceGroups/prometheus/providers/Microsoft.ContainerRegistry/registries/prometheus994432",
      "type": "string"
    },
    "acr_login_server": {
      "value": "prometheus994432.azurecr.io",
      "type": "string"
    },
    "aks_fqdn": {
      "value": "prometheus-bbc29743.hcp.eastus.azmk8s.io",
      "type": "string"
    },
    "aks_id": {
      "value": "/subscriptions/a4d33dc9-3b4e-470f-8024-10592c821737/resourceGroups/prometheus/providers/Microsoft.ContainerService/managedClusters/prometheus",
      "type": "string"
    },
    "aks_node_rg": {
      "value": "MC_prometheus_prometheus_eastus",
      "type": "string"
    },
    "client_certificate": {
      "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZIVENDQXdXZ0F3SUJBZ0lRUGJJWUFML2x4bldxZzVMamhWWWRKREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TWpBek1qQXhOelV4TURoYUZ3MHlOREF6TWpBeE9EQXhNRGhhTURBeApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHRZWE4wWlhKamJHbGxiblF3CmdnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUURIR3BoRjkremdIS1RJeVB2b3ZnbEwKc2FOQXNLMGtLcDg0bHRjU0JVd045T2lhNS8zbFBVeU9mREJML0VncVN4bWJVRDJIOW44NDZ3akgyRzNpdVRWLwpibjBkRnBKZGl3S1BzR3FFT0VvMURzQklDc1RCSFQ3c0h2d2paQVNsWFVlSXZOQ1dRc2xqWFQ0bnR6OElSeS80Clp1MjhZNmttZWZVUjM0dXJINmdXRWZWVUJNaC94UlRqV3ZIeENKUGlHL3B6cUZ3VFNTcGQvS0dLMkQzcUdHVnYKajJCYXRid1FwbUdXMVF2UDUwYUN3MTR3d0dYazBHYU9abmJURWVzMHZRNXVhbndjb211bVhESm5Fd3c3ZWRSYgpFWmJPN1NXYVVGYU9mNzk0U0EvNDdINWlXVEtwNXFTOGUvVGc5c0tMYTAvSzBHL1pxY2VzVnpGaHA5SGVyeWJ5CnlQd29YMlVEUFIyWkFpa0I1dFI2eUNXM0ZrK1luM28zK2xTMFhVWFlSaGUyWHpKVlpIK1lFSTlyKzBUdnBmOE4KWDJVT0ZadnV2QVU4bTR6T3c0SXVpcWZNUlBPSFpTZkJlTVluQXptS1dhalRpWktzWGZ3ZzFqVmxWZEphSXFweApYNUpkdTFwallHeG52N2JyYVp1Z21jUVM1cDJZbWI3MStpdmM0Um1lT3RuNzl0cTVza2Jua3JteXlVVElZblQ1CnRWdXhJN21OV0IycllMb2swckl2WlJsKzBGYnVpVlczMXZJem9GSUMxbW9kbDhnOVA4b05hNTh1SWg3REZxQnAKUytZc2RIMG9FZkxVWlpQRVRQN0psVjFSZE9xTWEyRm5ybkxteUF6VHB5RXFaQnBjVk9HcHAwTkFKS3FSZ0lDeQo4OGs0V0NoRk93eUsyVkRMK3RnYmdRSURBUUFCbzFZd1ZEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0V3WURWUjBsCkJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlNDc2c3c0NWRGsKN1VYS1phZzV1OWpySitYYXVqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FnRUFWcVo1bS95Y1lldmcxSTlTUzZnZgo4T044YzBxeDk3WlA5Syt6cGdxUjQ2ckR5bHQ2RmE0ZzdWNGhId1RqeUZRL2R2U1JDMGhSc1RPYko0WUxxelVGCkNGdFdpRUI2TEE0ZGFUMkloL1ZJUWFwL1pnSmtEZFdwQWZsM3orU2FnVWNoaWFwa3pUdnBPaE5uRGEzWUl3c04KYlBkOFowSHZVNHVUV0EwWjU0TU9lM25obkwxSmZKenFwT3dOYnhLaVcxeWpKeFpsWUR5QVZwUmI0MzVRNlZXNwpUQXdhNnhkbWQrWDFvOFl5eTVpZk5lOVcwUGwzSUZEYTVwK2NUNXBsbjl2a2VEZElnRCs0c3hlaFJEMDRIc1FqCjZwa1VnSjQvbVRvbnlKSlBkMGVpMzluV3ByQjc2cllaT0FaSWlNRTQ5UGxkYUlraGNUNVcwMWdWRCtwUGdPQXUKd2xjU05pWnFRdk1ZenU0a0w5WHNob3QvenZ2a1VheTIralFmajZMbEVwWGhWRlhzWjMraUg3bGJlVVY3WVhFRwpaSWpMSkRZZm5ROUgxVEg1WENQeGR2b25RRUN4ZWd3aVFCcWx3azNaYmZBY1MxaXRXU28yczdhMlZSMXhYeVN1CnJhVWEraVNkMVlrdVVkbzB4M0tSdDNsbEU1aU9Ma0JiMzg2SEt3ZjZQQjUvTkhqYWVoMlp0QUlVWk9lQVlYQ2gKVTNZdXM4U0NoSEtkaW93c2s3dlFKTUxobk44c0FPcmhDNkw2WEg0NUtGNWxwZTc1TFpzVEtocWs5RU5QNFNTdgpaWG9wU1FqV0ZBZ2RSdFI5bTBnTHZlZDAvMjhlY3EzbUtYdU9MdER3NTI3bkRjbDlHRnkyRTlyMGl4Zkl0QUxhCmtHa3hwSEFCeGNrZkltazg4dVYyM0MwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
      "type": "string"
    },
    "client_key": {
      "value": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBeHhxWVJmZnM0QnlreU1qNzZMNEpTN0dqUUxDdEpDcWZPSmJYRWdWTURmVG9tdWY5CjVUMU1qbnd3Uy94SUtrc1ptMUE5aC9aL09Pc0l4OWh0NHJrMWYyNTlIUmFTWFlzQ2o3QnFoRGhLTlE3QVNBckUKd1IwKzdCNzhJMlFFcFYxSGlMelFsa0xKWTEwK0o3Yy9DRWN2K0didHZHT3BKbm4xRWQrTHF4K29GaEgxVkFUSQpmOFVVNDFyeDhRaVQ0aHY2YzZoY0Uwa3FYZnloaXRnOTZoaGxiNDlnV3JXOEVLWmhsdFVMeitkR2dzTmVNTUJsCjVOQm1qbVoyMHhIck5MME9ibXA4SEtKcnBsd3laeE1NTzNuVVd4R1d6dTBsbWxCV2puKy9lRWdQK094K1lsa3kKcWVha3ZIdjA0UGJDaTJ0UHl0QnYyYW5IckZjeFlhZlIzcThtOHNqOEtGOWxBejBkbVFJcEFlYlVlc2dsdHhaUAptSjk2Ti9wVXRGMUYyRVlYdGw4eVZXUi9tQkNQYS90RTc2WC9EVjlsRGhXYjdyd0ZQSnVNenNPQ0xvcW56RVR6CmgyVW53WGpHSndNNWlsbW8wNG1TckYzOElOWTFaVlhTV2lLcWNWK1NYYnRhWTJCc1o3KzI2Mm1ib0puRUV1YWQKbUptKzlmb3IzT0VabmpyWisvYmF1YkpHNTVLNXNzbEV5R0owK2JWYnNTTzVqVmdkcTJDNkpOS3lMMlVaZnRCVwo3b2xWdDlieU02QlNBdFpxSFpmSVBUL0tEV3VmTGlJZXd4YWdhVXZtTEhSOUtCSHkxR1dUeEV6K3laVmRVWFRxCmpHdGhaNjV5NXNnTTA2Y2hLbVFhWEZUaHFhZERRQ1Nxa1lDQXN2UEpPRmdvUlRzTWl0bFF5L3JZRzRFQ0F3RUEKQVFLQ0FnRUF3SlFEcHVGM3R3bGRoV3VJNUlReS80alE2N2czcjl5ZDVxRlhZdkhHcjFVc1N2Q0xUbGh0SFFBWAp3dGRBZ2Mvajg2cTM2VE5OdUtMMCtqOW5nYjA4ZG9aSzg0Q3FqMW51WDBiMnIrNjJMLzJWazlqK2wvOE9wbG9OCjdMbElHUjVSRzN2dGtQa0dTMXFiek5SY1hraGtxTEg5enBMaXYvbUVSZ1pmMUdPcE03ZW8vOXdraGhqODdDOUMKQnE0U1E4aG1CY3BaVExvZkJZdGVRS3FKc0V4cWlHNDRkMlNDZytRNlRpYkE1eFcreUtucEIrU0FhY0g5QUUweApMMVNNbUpVb1NUb3IwNUp4NXhZVUZraUJNMkhTT1VlWkE0cXpMVC81aUprZGZGelBQaWlZMGMyT3lIRHk4L0E5CldmNnpDeUQvcTU3U0lNa3IvWkRVamExQnZFN1RycG9ZQnl1REZBYU01RmViUmNWUm1KSUE5V3hYU1FNMG5VcFIKZ0ZiU3E2dGpNOHIreG5ET2RSZFJNVmw2Q1g0TFo1QzVKZ0JGQ1Bvdnd2cTRvQUhqZEhpOUlrb2dBakowRjFNMgp1MmI5TW5maWNlVTd2LzRPbmZWc3NCbnVMM2RucEtSZ3hiREI3Z3Q1UUEvTDZoMW5aZ2gyOUtpSjZ0RWU4dk9sClE3eS9FZWJ2UUVoSzhLVWRPRE8rdEZ4alNvSkFlOG00VkthQ0UrdXIxZHhtNTIxYUxES0NicWZHOWVpTDRvWjgKNFpxMUhxS2NsOVhYZk1TQytIaXRBdFp4d0dYcHdGTnF5VGU0cGtJNlRmdkdiQjFMQ29hekp2U3RqbGdLdDhGSQppOGRLNWl1WG5HYTVmT3U3N09CbStZZTVtNllSODJRVkF0OFlnK3JlTzRXRGwvMlZmM0VDZ2dFQkFObVVsZFJBCmFvdk1tNFBRNVU1ZmlzeTc5SmxlNlkxNk8wMGIyK0RaUEVtUytTOTJJTWl4VmJRcUhBeXJtTXdCTVdOTnV4Yy8KMHBLYmt4WnVEVStaRXg1WER0YnpEWVBjdEJ2MkcySlFtQ0JTaXZac0x1ck9nRlBIaUxHTDMreitZWDZOT0wrcwp4ZWxZS2QxdGFnV2drRjl1cFlHek5FK29qVjltSlZuYTcyd3JEU3c3SFVDY2cvYWRBNXdUUFd0dnNOMXRPdzZNCkVBd2M2Zld3dm9iSFoxaE85RXd6cXRpUWlSdi9SMHJWQ0dzWTVZdzhaclBMbHpoMlE0NlBDZjZ3VUx6d016eGwKSm1FSzc4ZURZVENFZXNmRGJnT0xlOTh6bURuK1BTdmtNby94SjVoNks1N1Nkcm5rd0E3YnBETk9vMmpWT09WQwpaR2FpSXpBVElNMk9QeTBDZ2dFQkFPcEN6ZXFMZE0vRGJGRkxzQVZIT2JnNnlCRndaTWg3ekk2NlRwV09YNnFTCm5GZ1pKcTVyZVBlV2xYNVNVRFV3MHN2bmV3U2RpYU5XZVc1VUFFZE1mNkdKZlZoSUE0WTI2YTVCQTNHTEdLeTcKSmJZVXpOMW00clNObHpkb0pDUkEzZEFiNXNWa3VWaUFnVkxXZFo3MEk3ajNlVTlhLzFOSzEwUkZCdHVMNDZzQgprSllCRmdBUjA4MFFVbVB0OGliZ3A1bHJEN0txa3VxUjJzcVpGSGx3K3YxVE0zcjc0SzNpTGRnbFluSjdhdjJ4Cm0vOWloV3lrekRzSGJqbzU1NE9XeVU0ZUNaYmhGQXJ3YWQxKzk2QlExelhlcnI2VENGMzVQTDRFVEN5ME5rVFAKM256SkZ4VGpxalZyN3M2MGR2OVZkUEJNampRSVFSNldUMzdTejN1WklpVUNnZ0VBT1NnUE0vSzRDb0YxV090SApVWTlIcHdDNUFKRXVTVHdTMSs2NWxCZDgvdGJkSHRxcFFnOVR0RUJibmZoMTZ5RmxGL0VUZE1nUFNQUVZiNDc1CmNDK0dGakpJYzY3bG5mNGNVandVZFg4MmQwYzN1Z1F4VHYxd09KSHlGckhuNFJueUFveVdtOE9IT2dVdStqd0QKM2ZhUDlvSGFlSGZiQmhJQkVVNkVBVmJDRG1oQXpaMjUwWDlNS3p5VDlpd1h0bUZnMU1vYytYVlJ3ZHpXbVBRVgpHTkxKRXltcWcxb1BSMVN3citvZmtFam1MVHdkRVBuTkFPNDZpMXFGNUswdXN2a2VQSVBjOGNDZ2xGMkxINTRqCnFkc2paZGF3ejcyVWpNM0E3M3NhRnEyYm1yUis4azhscGxNalhUSDZRZXp3OVlseTQ5Y2ZXeHBWeGFCU0hnN28KVHhkUEFRS0NBUUF6d3hrZTF6dXpZTG9CYUpqM1FacTJZMzZybzhzUkpaRzRnK0F6V2FjMzJIZGxYQUZaRHZSRwp1T1pGYUVqQ3lBdjc5Q1VSaXdITHJxTGNSd0ZjdjhGLzN4SnNQRlZUQmJVeXhMalBFTzRkMUtocmlFTVFOTmlwCkRwUTRNUEd6ZFFYT0l5d2x0N0RncGx4dEFtZ3cvRDhjY3NwQ1I1Z2RQbTg4YllncllNaW9rNHJ3S2tORE5xMDMKSllFZkJZZTVJWERIRElvR2IzeFJDbk51eXM1a1d4dUtlQ1RxNnRibGRSR3VMZXlINFU5dHlSM3dHMFBpRXJQeAo0eDF2RGpaaXRDRzgraFFpVzQrREwwWWxKQlh4UFl1Z0lwazRFT01MYUxRTVJJVFVaK21KNE9pSGFDT0tnUmV1CkFEQmZTaTcxRWx2cGNQRUcvRC92VTBVemY3OUt6elpsQW9JQkFRREJzS1hlZ2tqQVZBUGsrSHU1NlBFM0g5VCsKVEw0bDY5NVdJRlByOWhMQTZCSmFXUE1vczFHR1VzVis3Z1dLcUxrazkrTDBZamJ3eGZKZlV4b0wwSGd4czh5VgphRkVIVW10RlRBbms4Ukd1Sks4V0lEK2lMWUw1Z0svSGtBZ2VZNTNuUnk3L0tMejZuaHNFa2ZGRXN5UGNZVHBsCkViN0xIczE4Y2s4VXJPT1VIUVZpNzBEK3AvMFBVdkdIVng1VDd3Z2NYRlFUMUc3b0lJUVNieXUvUjVOb2Y2KzAKZWwvaEgrK0lRaXRxRDJGaWJyenFFb1dBc2hYU2NoeVJpTzJBT0VSMWdkY1o1cUVYZmM0RjFrd3lPZ3BYZ2Erawo1aFMxS055aGFldURNTVRVNEFVcUlmRGI3TzU3TDU0a2pqRVBqa0NkOCsxYVRMdUppc0cySzhjWXEyMXMKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K",
      "type": "string"
    },
    "cluster_ca_certificate": {
      "value": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU2VENDQXRHZ0F3SUJBZ0lSQU5vVXRJZm9GSmpFbzNaTnVZa1R3K3d3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdJQmNOTWpJd016SXdNVGMxTVRBNFdoZ1BNakExTWpBek1qQXhPREF4TURoYQpNQTB4Q3pBSkJnTlZCQU1UQW1OaE1JSUNJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBCndoRTNoU3g2a2JXb1UwR0tZYzRHYkdmQ2hEWS8ydFZQQ1phZmNBdGRDdmtBelpRN0ZPbGxGb0ZoV0NZOTFvWFQKMlJ4K1FuREhWbXgvUGhleHQ5c2VSSXMwckMwSytmNURQeHQ2ZFRpV0ZmVEpXcFJQajJyL2tWZ2NkTGZoTC9HKwoxUi9ORFRuNFhHZDIrNjRLaE9zSHI4NklLYnNIOVBwVzBqc3JyQ1NWcHJEWU55aFV1UEI2aVJaQzhyK0tFdmFMCkZqZ0ZPK0tTMWRZWFJqTEpHR0FSVmkydWRKRXdvSlhRRm4yZEozRE12NUYvU0FQTTg3Qm1LTHc5b1V5WVZhRVYKMm1xYkNQTVQ4bm53T1VrTCs4Uy9VMVU3WGFyVWdUcWJkckZpTFE2RUxRUGpjMERidVZ0SDhTeDN2d0FoOW9HQgpBaGg1dkx0QlJMaGo3L0dpQ3lJVjRYREUrOStJZWozSlZJNjdvblRIeHl4MzlVd3VyNzhjSmNjbHZscFl1T3BrCkRSbEN3NWMzTXR1NnUwWnFyNmFYS3crc3J6VlBHT21ocHBTMWxOc3A3akp5YTlJL2NuaG1CRHNtcytqb3FJU2wKMWJRN1psRndDRlVUcHk2OG5Uc1dnaVVVYkh6SThOeFl3bFJJU2V6LzRIcFBZU29wK2ZHWXlrczJ1R2hBeEN2VgpQaytFOWhTWXY3ZCtjM05rQXc1ZlNBcXNSVkFJcWN4UlZDcENjTXM2R3FRMU8xTXRRUTM0SUNvWlV2VlRYK3VFCkNpN3FveWFGamlPd29POTNMZlFsVU5IRUpON2N6VW5BdXMxcDRqM1ZJaHlLTjlyZHFqL0FseFNrd0JyRGkvZVQKaURqdzg2VVBTcFdVT3FmcDRDUndaa1BVa3pNem1sbUpYWDlubzQrNjNnc0NBd0VBQWFOQ01FQXdEZ1lEVlIwUApBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSUt5RHV3SlVPVHRSY3BsCnFEbTcyT3NuNWRxNk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQmtac1l2NC9ZODNjVkF1cTdKT3N1VzluMEYKb1JSeVltWE1OaGdEaUliWG9VQVJ2VVVhaXFvZGUrblVnWkpreFJ3WUpRV1V3OHljc3ZIWHJrVmVZZE95cGdjRApkVGt3QzUzNy9ScC9DTXJMdTdycDl3RnZhV2pBcU5FTzFDMDNPQjBQMjBZOEhGSDhkWVcxbVNraS9wS0hyQlQzCm10NzRxOVJrWmFLNUlVQlZ5RDVNaUtEL0pPR29aYXNZUHRFK0pmbmk5aFNaZVVMSnhlRmVJZkhQYS95QmZ4REkKbHJYcG1QUmt1dGg4cHUrZ3JEa1hKd0kxejJ3bHUyWVJpSDM5SlFwdlZUUTIxcnBPR1YvbWJVbjRwUEdHWEY3agpmNDFPWDgzMDdDK2pkQ2twUWVYbkptYk0xT1IyN25TV2EwbFEwRkVjQ3gwNVdZaXFFaWt5M3BiRTBvWWJhZ1B0ClZCNktaZmpzRWp5UFVsYi8wTzBBemM3Uyt3QmRuQVFlWHFCRmd6UThYK1RpdjJiT29vTEVMTC9lbVRWUldBcWMKWEpON3RsNFpBc0pMK3BLeVFjNzFKODBEYnFrVnBjU01XeUlpeG1WdDVLeEwvV1NxbEtGbjNlcTdvUkZzTG1GZAp4ZVJ3Ukh1OGtQRXN1M3NVK3MvdWxSblR1aEc2dFV4WWZHVktlVmtsbDN4SWlCeVVFMXYzR0ovUnlPWmlJWGM4CmRGQUxUTzBCM3dEdkhmdjRkNm1MOWxWM0wwLzRTVnpka0tPRzdlb2ZFUzAzeFoyWmdKMmNYTmpPMmkwUXZvZnAKbmpndm9HOWhOMldtNEt4c1dXNkNrNW9VUjQyM0ZUTUlmQkhpMU13SXhabE9EbFVzcVFkTHlZb1dtcmZYMVhSRgpnYU81S29aUXVjeUZSeDEyaXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
      "type": "string"
    },
    "host": {
      "value": "https://prometheus-bbc29743.hcp.eastus.azmk8s.io:443",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "managed",
      "type": "azurerm_container_registry",
      "name": "acr",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "admin_enabled": false,
            "admin_password": "",
            "admin_username": "",
            "anonymous_pull_enabled": false,
            "data_endpoint_enabled": false,
            "encryption": [
              {
                "enabled": false,
                "identity_client_id": "",
                "key_vault_key_id": ""
              }
            ],
            "export_policy_enabled": true,
            "georeplication_locations": [],
            "georeplications": [],
            "id": "/subscriptions/a4d33dc9-3b4e-470f-8024-10592c821737/resourceGroups/prometheus/providers/Microsoft.ContainerRegistry/registries/prometheus994432",
            "identity": [],
            "location": "eastus",
            "login_server": "prometheus994432.azurecr.io",
            "name": "prometheus994432",
            "network_rule_bypass_option": "AzureServices",
            "network_rule_set": [],
            "public_network_access_enabled": true,
            "quarantine_policy_enabled": false,
            "resource_group_name": "prometheus",
            "retention_policy": [
              {
                "days": 7,
                "enabled": false
              }
            ],
            "sku": "Standard",
            "storage_account_id": "",
            "tags": {},
            "timeouts": null,
            "trust_policy": [
              {
                "enabled": false
              }
            ],
            "zone_redundancy_enabled": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIyIn0=",
          "dependencies": [
            "azurerm_resource_group.aks-rg"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_kubernetes_cluster",
      "name": "aks",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "aci_connector_linux": [],
            "addon_profile": [
              {
                "aci_connector_linux": [],
                "azure_keyvault_secrets_provider": [],
                "azure_policy": [
                  {
                    "enabled": true
                  }
                ],
                "http_application_routing": [],
                "ingress_application_gateway": [],
                "kube_dashboard": [],
                "oms_agent": [],
                "open_service_mesh": []
              }
            ],
            "api_server_authorized_ip_ranges": [],
            "auto_scaler_profile": [],
            "automatic_channel_upgrade": "",
            "azure_active_directory_role_based_access_control": [],
            "azure_policy_enabled": true,
            "default_node_pool": [
              {
                "availability_zones": [
                  "1",
                  "2",
                  "3"
                ],
                "enable_auto_scaling": false,
                "enable_host_encryption": false,
                "enable_node_public_ip": false,
                "fips_enabled": false,
                "kubelet_config": [],
                "kubelet_disk_type": "OS",
                "linux_os_config": [],
                "max_count": 0,
                "max_pods": 110,
                "min_count": 0,
                "name": "system",
                "node_count": 1,
                "node_labels": {},
                "node_public_ip_prefix_id": "",
                "node_taints": [],
                "only_critical_addons_enabled": false,
                "orchestrator_version": "1.21.7",
                "os_disk_size_gb": 128,
                "os_disk_type": "Managed",
                "os_sku": "Ubuntu",
                "pod_subnet_id": "",
                "proximity_placement_group_id": "",
                "tags": {},
                "type": "VirtualMachineScaleSets",
                "ultra_ssd_enabled": false,
                "upgrade_settings": [],
                "vm_size": "Standard_DS2_v2",
                "vnet_subnet_id": ""
              }
            ],
            "disk_encryption_set_id": "",
            "dns_prefix": "prometheus",
            "dns_prefix_private_cluster": "",
            "enable_pod_security_policy": false,
            "fqdn": "prometheus-bbc29743.hcp.eastus.azmk8s.io",
            "http_application_routing_enabled": false,
            "http_application_routing_zone_name": "",
            "http_proxy_config": [],
            "id": "/subscriptions/a4d33dc9-3b4e-470f-8024-10592c821737/resourceGroups/prometheus/providers/Microsoft.ContainerService/managedClusters/prometheus",
            "identity": [
              {
                "principal_id": "16e6c76d-c73f-4497-b468-cc6af4fe2cfb",
                "tenant_id": "81a17c03-6986-46ce-97d9-f8d207cd9df6",
                "type": "SystemAssigned",
                "user_assigned_identity_id": ""
              }
            ],
            "ingress_application_gateway": [],
            "key_vault_secrets_provider": [],
            "kube_admin_config": [],
            "kube_admin_config_raw": "",
            "kube_config": [
              {
                "client_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZIVENDQXdXZ0F3SUJBZ0lRUGJJWUFML2x4bldxZzVMamhWWWRKREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TWpBek1qQXhOelV4TURoYUZ3MHlOREF6TWpBeE9EQXhNRGhhTURBeApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHRZWE4wWlhKamJHbGxiblF3CmdnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUURIR3BoRjkremdIS1RJeVB2b3ZnbEwKc2FOQXNLMGtLcDg0bHRjU0JVd045T2lhNS8zbFBVeU9mREJML0VncVN4bWJVRDJIOW44NDZ3akgyRzNpdVRWLwpibjBkRnBKZGl3S1BzR3FFT0VvMURzQklDc1RCSFQ3c0h2d2paQVNsWFVlSXZOQ1dRc2xqWFQ0bnR6OElSeS80Clp1MjhZNmttZWZVUjM0dXJINmdXRWZWVUJNaC94UlRqV3ZIeENKUGlHL3B6cUZ3VFNTcGQvS0dLMkQzcUdHVnYKajJCYXRid1FwbUdXMVF2UDUwYUN3MTR3d0dYazBHYU9abmJURWVzMHZRNXVhbndjb211bVhESm5Fd3c3ZWRSYgpFWmJPN1NXYVVGYU9mNzk0U0EvNDdINWlXVEtwNXFTOGUvVGc5c0tMYTAvSzBHL1pxY2VzVnpGaHA5SGVyeWJ5CnlQd29YMlVEUFIyWkFpa0I1dFI2eUNXM0ZrK1luM28zK2xTMFhVWFlSaGUyWHpKVlpIK1lFSTlyKzBUdnBmOE4KWDJVT0ZadnV2QVU4bTR6T3c0SXVpcWZNUlBPSFpTZkJlTVluQXptS1dhalRpWktzWGZ3ZzFqVmxWZEphSXFweApYNUpkdTFwallHeG52N2JyYVp1Z21jUVM1cDJZbWI3MStpdmM0Um1lT3RuNzl0cTVza2Jua3JteXlVVElZblQ1CnRWdXhJN21OV0IycllMb2swckl2WlJsKzBGYnVpVlczMXZJem9GSUMxbW9kbDhnOVA4b05hNTh1SWg3REZxQnAKUytZc2RIMG9FZkxVWlpQRVRQN0psVjFSZE9xTWEyRm5ybkxteUF6VHB5RXFaQnBjVk9HcHAwTkFKS3FSZ0lDeQo4OGs0V0NoRk93eUsyVkRMK3RnYmdRSURBUUFCbzFZd1ZEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0V3WURWUjBsCkJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlNDc2c3c0NWRGsKN1VYS1phZzV1OWpySitYYXVqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FnRUFWcVo1bS95Y1lldmcxSTlTUzZnZgo4T044YzBxeDk3WlA5Syt6cGdxUjQ2ckR5bHQ2RmE0ZzdWNGhId1RqeUZRL2R2U1JDMGhSc1RPYko0WUxxelVGCkNGdFdpRUI2TEE0ZGFUMkloL1ZJUWFwL1pnSmtEZFdwQWZsM3orU2FnVWNoaWFwa3pUdnBPaE5uRGEzWUl3c04KYlBkOFowSHZVNHVUV0EwWjU0TU9lM25obkwxSmZKenFwT3dOYnhLaVcxeWpKeFpsWUR5QVZwUmI0MzVRNlZXNwpUQXdhNnhkbWQrWDFvOFl5eTVpZk5lOVcwUGwzSUZEYTVwK2NUNXBsbjl2a2VEZElnRCs0c3hlaFJEMDRIc1FqCjZwa1VnSjQvbVRvbnlKSlBkMGVpMzluV3ByQjc2cllaT0FaSWlNRTQ5UGxkYUlraGNUNVcwMWdWRCtwUGdPQXUKd2xjU05pWnFRdk1ZenU0a0w5WHNob3QvenZ2a1VheTIralFmajZMbEVwWGhWRlhzWjMraUg3bGJlVVY3WVhFRwpaSWpMSkRZZm5ROUgxVEg1WENQeGR2b25RRUN4ZWd3aVFCcWx3azNaYmZBY1MxaXRXU28yczdhMlZSMXhYeVN1CnJhVWEraVNkMVlrdVVkbzB4M0tSdDNsbEU1aU9Ma0JiMzg2SEt3ZjZQQjUvTkhqYWVoMlp0QUlVWk9lQVlYQ2gKVTNZdXM4U0NoSEtkaW93c2s3dlFKTUxobk44c0FPcmhDNkw2WEg0NUtGNWxwZTc1TFpzVEtocWs5RU5QNFNTdgpaWG9wU1FqV0ZBZ2RSdFI5bTBnTHZlZDAvMjhlY3EzbUtYdU9MdER3NTI3bkRjbDlHRnkyRTlyMGl4Zkl0QUxhCmtHa3hwSEFCeGNrZkltazg4dVYyM0MwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                "client_key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBeHhxWVJmZnM0QnlreU1qNzZMNEpTN0dqUUxDdEpDcWZPSmJYRWdWTURmVG9tdWY5CjVUMU1qbnd3Uy94SUtrc1ptMUE5aC9aL09Pc0l4OWh0NHJrMWYyNTlIUmFTWFlzQ2o3QnFoRGhLTlE3QVNBckUKd1IwKzdCNzhJMlFFcFYxSGlMelFsa0xKWTEwK0o3Yy9DRWN2K0didHZHT3BKbm4xRWQrTHF4K29GaEgxVkFUSQpmOFVVNDFyeDhRaVQ0aHY2YzZoY0Uwa3FYZnloaXRnOTZoaGxiNDlnV3JXOEVLWmhsdFVMeitkR2dzTmVNTUJsCjVOQm1qbVoyMHhIck5MME9ibXA4SEtKcnBsd3laeE1NTzNuVVd4R1d6dTBsbWxCV2puKy9lRWdQK094K1lsa3kKcWVha3ZIdjA0UGJDaTJ0UHl0QnYyYW5IckZjeFlhZlIzcThtOHNqOEtGOWxBejBkbVFJcEFlYlVlc2dsdHhaUAptSjk2Ti9wVXRGMUYyRVlYdGw4eVZXUi9tQkNQYS90RTc2WC9EVjlsRGhXYjdyd0ZQSnVNenNPQ0xvcW56RVR6CmgyVW53WGpHSndNNWlsbW8wNG1TckYzOElOWTFaVlhTV2lLcWNWK1NYYnRhWTJCc1o3KzI2Mm1ib0puRUV1YWQKbUptKzlmb3IzT0VabmpyWisvYmF1YkpHNTVLNXNzbEV5R0owK2JWYnNTTzVqVmdkcTJDNkpOS3lMMlVaZnRCVwo3b2xWdDlieU02QlNBdFpxSFpmSVBUL0tEV3VmTGlJZXd4YWdhVXZtTEhSOUtCSHkxR1dUeEV6K3laVmRVWFRxCmpHdGhaNjV5NXNnTTA2Y2hLbVFhWEZUaHFhZERRQ1Nxa1lDQXN2UEpPRmdvUlRzTWl0bFF5L3JZRzRFQ0F3RUEKQVFLQ0FnRUF3SlFEcHVGM3R3bGRoV3VJNUlReS80alE2N2czcjl5ZDVxRlhZdkhHcjFVc1N2Q0xUbGh0SFFBWAp3dGRBZ2Mvajg2cTM2VE5OdUtMMCtqOW5nYjA4ZG9aSzg0Q3FqMW51WDBiMnIrNjJMLzJWazlqK2wvOE9wbG9OCjdMbElHUjVSRzN2dGtQa0dTMXFiek5SY1hraGtxTEg5enBMaXYvbUVSZ1pmMUdPcE03ZW8vOXdraGhqODdDOUMKQnE0U1E4aG1CY3BaVExvZkJZdGVRS3FKc0V4cWlHNDRkMlNDZytRNlRpYkE1eFcreUtucEIrU0FhY0g5QUUweApMMVNNbUpVb1NUb3IwNUp4NXhZVUZraUJNMkhTT1VlWkE0cXpMVC81aUprZGZGelBQaWlZMGMyT3lIRHk4L0E5CldmNnpDeUQvcTU3U0lNa3IvWkRVamExQnZFN1RycG9ZQnl1REZBYU01RmViUmNWUm1KSUE5V3hYU1FNMG5VcFIKZ0ZiU3E2dGpNOHIreG5ET2RSZFJNVmw2Q1g0TFo1QzVKZ0JGQ1Bvdnd2cTRvQUhqZEhpOUlrb2dBakowRjFNMgp1MmI5TW5maWNlVTd2LzRPbmZWc3NCbnVMM2RucEtSZ3hiREI3Z3Q1UUEvTDZoMW5aZ2gyOUtpSjZ0RWU4dk9sClE3eS9FZWJ2UUVoSzhLVWRPRE8rdEZ4alNvSkFlOG00VkthQ0UrdXIxZHhtNTIxYUxES0NicWZHOWVpTDRvWjgKNFpxMUhxS2NsOVhYZk1TQytIaXRBdFp4d0dYcHdGTnF5VGU0cGtJNlRmdkdiQjFMQ29hekp2U3RqbGdLdDhGSQppOGRLNWl1WG5HYTVmT3U3N09CbStZZTVtNllSODJRVkF0OFlnK3JlTzRXRGwvMlZmM0VDZ2dFQkFObVVsZFJBCmFvdk1tNFBRNVU1ZmlzeTc5SmxlNlkxNk8wMGIyK0RaUEVtUytTOTJJTWl4VmJRcUhBeXJtTXdCTVdOTnV4Yy8KMHBLYmt4WnVEVStaRXg1WER0YnpEWVBjdEJ2MkcySlFtQ0JTaXZac0x1ck9nRlBIaUxHTDMreitZWDZOT0wrcwp4ZWxZS2QxdGFnV2drRjl1cFlHek5FK29qVjltSlZuYTcyd3JEU3c3SFVDY2cvYWRBNXdUUFd0dnNOMXRPdzZNCkVBd2M2Zld3dm9iSFoxaE85RXd6cXRpUWlSdi9SMHJWQ0dzWTVZdzhaclBMbHpoMlE0NlBDZjZ3VUx6d016eGwKSm1FSzc4ZURZVENFZXNmRGJnT0xlOTh6bURuK1BTdmtNby94SjVoNks1N1Nkcm5rd0E3YnBETk9vMmpWT09WQwpaR2FpSXpBVElNMk9QeTBDZ2dFQkFPcEN6ZXFMZE0vRGJGRkxzQVZIT2JnNnlCRndaTWg3ekk2NlRwV09YNnFTCm5GZ1pKcTVyZVBlV2xYNVNVRFV3MHN2bmV3U2RpYU5XZVc1VUFFZE1mNkdKZlZoSUE0WTI2YTVCQTNHTEdLeTcKSmJZVXpOMW00clNObHpkb0pDUkEzZEFiNXNWa3VWaUFnVkxXZFo3MEk3ajNlVTlhLzFOSzEwUkZCdHVMNDZzQgprSllCRmdBUjA4MFFVbVB0OGliZ3A1bHJEN0txa3VxUjJzcVpGSGx3K3YxVE0zcjc0SzNpTGRnbFluSjdhdjJ4Cm0vOWloV3lrekRzSGJqbzU1NE9XeVU0ZUNaYmhGQXJ3YWQxKzk2QlExelhlcnI2VENGMzVQTDRFVEN5ME5rVFAKM256SkZ4VGpxalZyN3M2MGR2OVZkUEJNampRSVFSNldUMzdTejN1WklpVUNnZ0VBT1NnUE0vSzRDb0YxV090SApVWTlIcHdDNUFKRXVTVHdTMSs2NWxCZDgvdGJkSHRxcFFnOVR0RUJibmZoMTZ5RmxGL0VUZE1nUFNQUVZiNDc1CmNDK0dGakpJYzY3bG5mNGNVandVZFg4MmQwYzN1Z1F4VHYxd09KSHlGckhuNFJueUFveVdtOE9IT2dVdStqd0QKM2ZhUDlvSGFlSGZiQmhJQkVVNkVBVmJDRG1oQXpaMjUwWDlNS3p5VDlpd1h0bUZnMU1vYytYVlJ3ZHpXbVBRVgpHTkxKRXltcWcxb1BSMVN3citvZmtFam1MVHdkRVBuTkFPNDZpMXFGNUswdXN2a2VQSVBjOGNDZ2xGMkxINTRqCnFkc2paZGF3ejcyVWpNM0E3M3NhRnEyYm1yUis4azhscGxNalhUSDZRZXp3OVlseTQ5Y2ZXeHBWeGFCU0hnN28KVHhkUEFRS0NBUUF6d3hrZTF6dXpZTG9CYUpqM1FacTJZMzZybzhzUkpaRzRnK0F6V2FjMzJIZGxYQUZaRHZSRwp1T1pGYUVqQ3lBdjc5Q1VSaXdITHJxTGNSd0ZjdjhGLzN4SnNQRlZUQmJVeXhMalBFTzRkMUtocmlFTVFOTmlwCkRwUTRNUEd6ZFFYT0l5d2x0N0RncGx4dEFtZ3cvRDhjY3NwQ1I1Z2RQbTg4YllncllNaW9rNHJ3S2tORE5xMDMKSllFZkJZZTVJWERIRElvR2IzeFJDbk51eXM1a1d4dUtlQ1RxNnRibGRSR3VMZXlINFU5dHlSM3dHMFBpRXJQeAo0eDF2RGpaaXRDRzgraFFpVzQrREwwWWxKQlh4UFl1Z0lwazRFT01MYUxRTVJJVFVaK21KNE9pSGFDT0tnUmV1CkFEQmZTaTcxRWx2cGNQRUcvRC92VTBVemY3OUt6elpsQW9JQkFRREJzS1hlZ2tqQVZBUGsrSHU1NlBFM0g5VCsKVEw0bDY5NVdJRlByOWhMQTZCSmFXUE1vczFHR1VzVis3Z1dLcUxrazkrTDBZamJ3eGZKZlV4b0wwSGd4czh5VgphRkVIVW10RlRBbms4Ukd1Sks4V0lEK2lMWUw1Z0svSGtBZ2VZNTNuUnk3L0tMejZuaHNFa2ZGRXN5UGNZVHBsCkViN0xIczE4Y2s4VXJPT1VIUVZpNzBEK3AvMFBVdkdIVng1VDd3Z2NYRlFUMUc3b0lJUVNieXUvUjVOb2Y2KzAKZWwvaEgrK0lRaXRxRDJGaWJyenFFb1dBc2hYU2NoeVJpTzJBT0VSMWdkY1o1cUVYZmM0RjFrd3lPZ3BYZ2Erawo1aFMxS055aGFldURNTVRVNEFVcUlmRGI3TzU3TDU0a2pqRVBqa0NkOCsxYVRMdUppc0cySzhjWXEyMXMKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K",
                "cluster_ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU2VENDQXRHZ0F3SUJBZ0lSQU5vVXRJZm9GSmpFbzNaTnVZa1R3K3d3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdJQmNOTWpJd016SXdNVGMxTVRBNFdoZ1BNakExTWpBek1qQXhPREF4TURoYQpNQTB4Q3pBSkJnTlZCQU1UQW1OaE1JSUNJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBCndoRTNoU3g2a2JXb1UwR0tZYzRHYkdmQ2hEWS8ydFZQQ1phZmNBdGRDdmtBelpRN0ZPbGxGb0ZoV0NZOTFvWFQKMlJ4K1FuREhWbXgvUGhleHQ5c2VSSXMwckMwSytmNURQeHQ2ZFRpV0ZmVEpXcFJQajJyL2tWZ2NkTGZoTC9HKwoxUi9ORFRuNFhHZDIrNjRLaE9zSHI4NklLYnNIOVBwVzBqc3JyQ1NWcHJEWU55aFV1UEI2aVJaQzhyK0tFdmFMCkZqZ0ZPK0tTMWRZWFJqTEpHR0FSVmkydWRKRXdvSlhRRm4yZEozRE12NUYvU0FQTTg3Qm1LTHc5b1V5WVZhRVYKMm1xYkNQTVQ4bm53T1VrTCs4Uy9VMVU3WGFyVWdUcWJkckZpTFE2RUxRUGpjMERidVZ0SDhTeDN2d0FoOW9HQgpBaGg1dkx0QlJMaGo3L0dpQ3lJVjRYREUrOStJZWozSlZJNjdvblRIeHl4MzlVd3VyNzhjSmNjbHZscFl1T3BrCkRSbEN3NWMzTXR1NnUwWnFyNmFYS3crc3J6VlBHT21ocHBTMWxOc3A3akp5YTlJL2NuaG1CRHNtcytqb3FJU2wKMWJRN1psRndDRlVUcHk2OG5Uc1dnaVVVYkh6SThOeFl3bFJJU2V6LzRIcFBZU29wK2ZHWXlrczJ1R2hBeEN2VgpQaytFOWhTWXY3ZCtjM05rQXc1ZlNBcXNSVkFJcWN4UlZDcENjTXM2R3FRMU8xTXRRUTM0SUNvWlV2VlRYK3VFCkNpN3FveWFGamlPd29POTNMZlFsVU5IRUpON2N6VW5BdXMxcDRqM1ZJaHlLTjlyZHFqL0FseFNrd0JyRGkvZVQKaURqdzg2VVBTcFdVT3FmcDRDUndaa1BVa3pNem1sbUpYWDlubzQrNjNnc0NBd0VBQWFOQ01FQXdEZ1lEVlIwUApBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSUt5RHV3SlVPVHRSY3BsCnFEbTcyT3NuNWRxNk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQmtac1l2NC9ZODNjVkF1cTdKT3N1VzluMEYKb1JSeVltWE1OaGdEaUliWG9VQVJ2VVVhaXFvZGUrblVnWkpreFJ3WUpRV1V3OHljc3ZIWHJrVmVZZE95cGdjRApkVGt3QzUzNy9ScC9DTXJMdTdycDl3RnZhV2pBcU5FTzFDMDNPQjBQMjBZOEhGSDhkWVcxbVNraS9wS0hyQlQzCm10NzRxOVJrWmFLNUlVQlZ5RDVNaUtEL0pPR29aYXNZUHRFK0pmbmk5aFNaZVVMSnhlRmVJZkhQYS95QmZ4REkKbHJYcG1QUmt1dGg4cHUrZ3JEa1hKd0kxejJ3bHUyWVJpSDM5SlFwdlZUUTIxcnBPR1YvbWJVbjRwUEdHWEY3agpmNDFPWDgzMDdDK2pkQ2twUWVYbkptYk0xT1IyN25TV2EwbFEwRkVjQ3gwNVdZaXFFaWt5M3BiRTBvWWJhZ1B0ClZCNktaZmpzRWp5UFVsYi8wTzBBemM3Uyt3QmRuQVFlWHFCRmd6UThYK1RpdjJiT29vTEVMTC9lbVRWUldBcWMKWEpON3RsNFpBc0pMK3BLeVFjNzFKODBEYnFrVnBjU01XeUlpeG1WdDVLeEwvV1NxbEtGbjNlcTdvUkZzTG1GZAp4ZVJ3Ukh1OGtQRXN1M3NVK3MvdWxSblR1aEc2dFV4WWZHVktlVmtsbDN4SWlCeVVFMXYzR0ovUnlPWmlJWGM4CmRGQUxUTzBCM3dEdkhmdjRkNm1MOWxWM0wwLzRTVnpka0tPRzdlb2ZFUzAzeFoyWmdKMmNYTmpPMmkwUXZvZnAKbmpndm9HOWhOMldtNEt4c1dXNkNrNW9VUjQyM0ZUTUlmQkhpMU13SXhabE9EbFVzcVFkTHlZb1dtcmZYMVhSRgpnYU81S29aUXVjeUZSeDEyaXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                "host": "https://prometheus-bbc29743.hcp.eastus.azmk8s.io:443",
                "password": "b732b096ddd19ea60be42deace1fabf1e02766c1e4512dd9eac58d7e500fadd1440da8f3cabe9bd163b0c94f2fa34a698445f4bba9783d7a815072a08df74807",
                "username": "clusterUser_prometheus_prometheus"
              }
            ],
            "kube_config_raw": "apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU2VENDQXRHZ0F3SUJBZ0lSQU5vVXRJZm9GSmpFbzNaTnVZa1R3K3d3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdJQmNOTWpJd016SXdNVGMxTVRBNFdoZ1BNakExTWpBek1qQXhPREF4TURoYQpNQTB4Q3pBSkJnTlZCQU1UQW1OaE1JSUNJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBCndoRTNoU3g2a2JXb1UwR0tZYzRHYkdmQ2hEWS8ydFZQQ1phZmNBdGRDdmtBelpRN0ZPbGxGb0ZoV0NZOTFvWFQKMlJ4K1FuREhWbXgvUGhleHQ5c2VSSXMwckMwSytmNURQeHQ2ZFRpV0ZmVEpXcFJQajJyL2tWZ2NkTGZoTC9HKwoxUi9ORFRuNFhHZDIrNjRLaE9zSHI4NklLYnNIOVBwVzBqc3JyQ1NWcHJEWU55aFV1UEI2aVJaQzhyK0tFdmFMCkZqZ0ZPK0tTMWRZWFJqTEpHR0FSVmkydWRKRXdvSlhRRm4yZEozRE12NUYvU0FQTTg3Qm1LTHc5b1V5WVZhRVYKMm1xYkNQTVQ4bm53T1VrTCs4Uy9VMVU3WGFyVWdUcWJkckZpTFE2RUxRUGpjMERidVZ0SDhTeDN2d0FoOW9HQgpBaGg1dkx0QlJMaGo3L0dpQ3lJVjRYREUrOStJZWozSlZJNjdvblRIeHl4MzlVd3VyNzhjSmNjbHZscFl1T3BrCkRSbEN3NWMzTXR1NnUwWnFyNmFYS3crc3J6VlBHT21ocHBTMWxOc3A3akp5YTlJL2NuaG1CRHNtcytqb3FJU2wKMWJRN1psRndDRlVUcHk2OG5Uc1dnaVVVYkh6SThOeFl3bFJJU2V6LzRIcFBZU29wK2ZHWXlrczJ1R2hBeEN2VgpQaytFOWhTWXY3ZCtjM05rQXc1ZlNBcXNSVkFJcWN4UlZDcENjTXM2R3FRMU8xTXRRUTM0SUNvWlV2VlRYK3VFCkNpN3FveWFGamlPd29POTNMZlFsVU5IRUpON2N6VW5BdXMxcDRqM1ZJaHlLTjlyZHFqL0FseFNrd0JyRGkvZVQKaURqdzg2VVBTcFdVT3FmcDRDUndaa1BVa3pNem1sbUpYWDlubzQrNjNnc0NBd0VBQWFOQ01FQXdEZ1lEVlIwUApBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSUt5RHV3SlVPVHRSY3BsCnFEbTcyT3NuNWRxNk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQmtac1l2NC9ZODNjVkF1cTdKT3N1VzluMEYKb1JSeVltWE1OaGdEaUliWG9VQVJ2VVVhaXFvZGUrblVnWkpreFJ3WUpRV1V3OHljc3ZIWHJrVmVZZE95cGdjRApkVGt3QzUzNy9ScC9DTXJMdTdycDl3RnZhV2pBcU5FTzFDMDNPQjBQMjBZOEhGSDhkWVcxbVNraS9wS0hyQlQzCm10NzRxOVJrWmFLNUlVQlZ5RDVNaUtEL0pPR29aYXNZUHRFK0pmbmk5aFNaZVVMSnhlRmVJZkhQYS95QmZ4REkKbHJYcG1QUmt1dGg4cHUrZ3JEa1hKd0kxejJ3bHUyWVJpSDM5SlFwdlZUUTIxcnBPR1YvbWJVbjRwUEdHWEY3agpmNDFPWDgzMDdDK2pkQ2twUWVYbkptYk0xT1IyN25TV2EwbFEwRkVjQ3gwNVdZaXFFaWt5M3BiRTBvWWJhZ1B0ClZCNktaZmpzRWp5UFVsYi8wTzBBemM3Uyt3QmRuQVFlWHFCRmd6UThYK1RpdjJiT29vTEVMTC9lbVRWUldBcWMKWEpON3RsNFpBc0pMK3BLeVFjNzFKODBEYnFrVnBjU01XeUlpeG1WdDVLeEwvV1NxbEtGbjNlcTdvUkZzTG1GZAp4ZVJ3Ukh1OGtQRXN1M3NVK3MvdWxSblR1aEc2dFV4WWZHVktlVmtsbDN4SWlCeVVFMXYzR0ovUnlPWmlJWGM4CmRGQUxUTzBCM3dEdkhmdjRkNm1MOWxWM0wwLzRTVnpka0tPRzdlb2ZFUzAzeFoyWmdKMmNYTmpPMmkwUXZvZnAKbmpndm9HOWhOMldtNEt4c1dXNkNrNW9VUjQyM0ZUTUlmQkhpMU13SXhabE9EbFVzcVFkTHlZb1dtcmZYMVhSRgpnYU81S29aUXVjeUZSeDEyaXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    server: https://prometheus-bbc29743.hcp.eastus.azmk8s.io:443\n  name: prometheus\ncontexts:\n- context:\n    cluster: prometheus\n    user: clusterUser_prometheus_prometheus\n  name: prometheus\ncurrent-context: prometheus\nkind: Config\npreferences: {}\nusers:\n- name: clusterUser_prometheus_prometheus\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZIVENDQXdXZ0F3SUJBZ0lRUGJJWUFML2x4bldxZzVMamhWWWRKREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TWpBek1qQXhOelV4TURoYUZ3MHlOREF6TWpBeE9EQXhNRGhhTURBeApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHRZWE4wWlhKamJHbGxiblF3CmdnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUURIR3BoRjkremdIS1RJeVB2b3ZnbEwKc2FOQXNLMGtLcDg0bHRjU0JVd045T2lhNS8zbFBVeU9mREJML0VncVN4bWJVRDJIOW44NDZ3akgyRzNpdVRWLwpibjBkRnBKZGl3S1BzR3FFT0VvMURzQklDc1RCSFQ3c0h2d2paQVNsWFVlSXZOQ1dRc2xqWFQ0bnR6OElSeS80Clp1MjhZNmttZWZVUjM0dXJINmdXRWZWVUJNaC94UlRqV3ZIeENKUGlHL3B6cUZ3VFNTcGQvS0dLMkQzcUdHVnYKajJCYXRid1FwbUdXMVF2UDUwYUN3MTR3d0dYazBHYU9abmJURWVzMHZRNXVhbndjb211bVhESm5Fd3c3ZWRSYgpFWmJPN1NXYVVGYU9mNzk0U0EvNDdINWlXVEtwNXFTOGUvVGc5c0tMYTAvSzBHL1pxY2VzVnpGaHA5SGVyeWJ5CnlQd29YMlVEUFIyWkFpa0I1dFI2eUNXM0ZrK1luM28zK2xTMFhVWFlSaGUyWHpKVlpIK1lFSTlyKzBUdnBmOE4KWDJVT0ZadnV2QVU4bTR6T3c0SXVpcWZNUlBPSFpTZkJlTVluQXptS1dhalRpWktzWGZ3ZzFqVmxWZEphSXFweApYNUpkdTFwallHeG52N2JyYVp1Z21jUVM1cDJZbWI3MStpdmM0Um1lT3RuNzl0cTVza2Jua3JteXlVVElZblQ1CnRWdXhJN21OV0IycllMb2swckl2WlJsKzBGYnVpVlczMXZJem9GSUMxbW9kbDhnOVA4b05hNTh1SWg3REZxQnAKUytZc2RIMG9FZkxVWlpQRVRQN0psVjFSZE9xTWEyRm5ybkxteUF6VHB5RXFaQnBjVk9HcHAwTkFKS3FSZ0lDeQo4OGs0V0NoRk93eUsyVkRMK3RnYmdRSURBUUFCbzFZd1ZEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0V3WURWUjBsCkJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlNDc2c3c0NWRGsKN1VYS1phZzV1OWpySitYYXVqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FnRUFWcVo1bS95Y1lldmcxSTlTUzZnZgo4T044YzBxeDk3WlA5Syt6cGdxUjQ2ckR5bHQ2RmE0ZzdWNGhId1RqeUZRL2R2U1JDMGhSc1RPYko0WUxxelVGCkNGdFdpRUI2TEE0ZGFUMkloL1ZJUWFwL1pnSmtEZFdwQWZsM3orU2FnVWNoaWFwa3pUdnBPaE5uRGEzWUl3c04KYlBkOFowSHZVNHVUV0EwWjU0TU9lM25obkwxSmZKenFwT3dOYnhLaVcxeWpKeFpsWUR5QVZwUmI0MzVRNlZXNwpUQXdhNnhkbWQrWDFvOFl5eTVpZk5lOVcwUGwzSUZEYTVwK2NUNXBsbjl2a2VEZElnRCs0c3hlaFJEMDRIc1FqCjZwa1VnSjQvbVRvbnlKSlBkMGVpMzluV3ByQjc2cllaT0FaSWlNRTQ5UGxkYUlraGNUNVcwMWdWRCtwUGdPQXUKd2xjU05pWnFRdk1ZenU0a0w5WHNob3QvenZ2a1VheTIralFmajZMbEVwWGhWRlhzWjMraUg3bGJlVVY3WVhFRwpaSWpMSkRZZm5ROUgxVEg1WENQeGR2b25RRUN4ZWd3aVFCcWx3azNaYmZBY1MxaXRXU28yczdhMlZSMXhYeVN1CnJhVWEraVNkMVlrdVVkbzB4M0tSdDNsbEU1aU9Ma0JiMzg2SEt3ZjZQQjUvTkhqYWVoMlp0QUlVWk9lQVlYQ2gKVTNZdXM4U0NoSEtkaW93c2s3dlFKTUxobk44c0FPcmhDNkw2WEg0NUtGNWxwZTc1TFpzVEtocWs5RU5QNFNTdgpaWG9wU1FqV0ZBZ2RSdFI5bTBnTHZlZDAvMjhlY3EzbUtYdU9MdER3NTI3bkRjbDlHRnkyRTlyMGl4Zkl0QUxhCmtHa3hwSEFCeGNrZkltazg4dVYyM0MwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBeHhxWVJmZnM0QnlreU1qNzZMNEpTN0dqUUxDdEpDcWZPSmJYRWdWTURmVG9tdWY5CjVUMU1qbnd3Uy94SUtrc1ptMUE5aC9aL09Pc0l4OWh0NHJrMWYyNTlIUmFTWFlzQ2o3QnFoRGhLTlE3QVNBckUKd1IwKzdCNzhJMlFFcFYxSGlMelFsa0xKWTEwK0o3Yy9DRWN2K0didHZHT3BKbm4xRWQrTHF4K29GaEgxVkFUSQpmOFVVNDFyeDhRaVQ0aHY2YzZoY0Uwa3FYZnloaXRnOTZoaGxiNDlnV3JXOEVLWmhsdFVMeitkR2dzTmVNTUJsCjVOQm1qbVoyMHhIck5MME9ibXA4SEtKcnBsd3laeE1NTzNuVVd4R1d6dTBsbWxCV2puKy9lRWdQK094K1lsa3kKcWVha3ZIdjA0UGJDaTJ0UHl0QnYyYW5IckZjeFlhZlIzcThtOHNqOEtGOWxBejBkbVFJcEFlYlVlc2dsdHhaUAptSjk2Ti9wVXRGMUYyRVlYdGw4eVZXUi9tQkNQYS90RTc2WC9EVjlsRGhXYjdyd0ZQSnVNenNPQ0xvcW56RVR6CmgyVW53WGpHSndNNWlsbW8wNG1TckYzOElOWTFaVlhTV2lLcWNWK1NYYnRhWTJCc1o3KzI2Mm1ib0puRUV1YWQKbUptKzlmb3IzT0VabmpyWisvYmF1YkpHNTVLNXNzbEV5R0owK2JWYnNTTzVqVmdkcTJDNkpOS3lMMlVaZnRCVwo3b2xWdDlieU02QlNBdFpxSFpmSVBUL0tEV3VmTGlJZXd4YWdhVXZtTEhSOUtCSHkxR1dUeEV6K3laVmRVWFRxCmpHdGhaNjV5NXNnTTA2Y2hLbVFhWEZUaHFhZERRQ1Nxa1lDQXN2UEpPRmdvUlRzTWl0bFF5L3JZRzRFQ0F3RUEKQVFLQ0FnRUF3SlFEcHVGM3R3bGRoV3VJNUlReS80alE2N2czcjl5ZDVxRlhZdkhHcjFVc1N2Q0xUbGh0SFFBWAp3dGRBZ2Mvajg2cTM2VE5OdUtMMCtqOW5nYjA4ZG9aSzg0Q3FqMW51WDBiMnIrNjJMLzJWazlqK2wvOE9wbG9OCjdMbElHUjVSRzN2dGtQa0dTMXFiek5SY1hraGtxTEg5enBMaXYvbUVSZ1pmMUdPcE03ZW8vOXdraGhqODdDOUMKQnE0U1E4aG1CY3BaVExvZkJZdGVRS3FKc0V4cWlHNDRkMlNDZytRNlRpYkE1eFcreUtucEIrU0FhY0g5QUUweApMMVNNbUpVb1NUb3IwNUp4NXhZVUZraUJNMkhTT1VlWkE0cXpMVC81aUprZGZGelBQaWlZMGMyT3lIRHk4L0E5CldmNnpDeUQvcTU3U0lNa3IvWkRVamExQnZFN1RycG9ZQnl1REZBYU01RmViUmNWUm1KSUE5V3hYU1FNMG5VcFIKZ0ZiU3E2dGpNOHIreG5ET2RSZFJNVmw2Q1g0TFo1QzVKZ0JGQ1Bvdnd2cTRvQUhqZEhpOUlrb2dBakowRjFNMgp1MmI5TW5maWNlVTd2LzRPbmZWc3NCbnVMM2RucEtSZ3hiREI3Z3Q1UUEvTDZoMW5aZ2gyOUtpSjZ0RWU4dk9sClE3eS9FZWJ2UUVoSzhLVWRPRE8rdEZ4alNvSkFlOG00VkthQ0UrdXIxZHhtNTIxYUxES0NicWZHOWVpTDRvWjgKNFpxMUhxS2NsOVhYZk1TQytIaXRBdFp4d0dYcHdGTnF5VGU0cGtJNlRmdkdiQjFMQ29hekp2U3RqbGdLdDhGSQppOGRLNWl1WG5HYTVmT3U3N09CbStZZTVtNllSODJRVkF0OFlnK3JlTzRXRGwvMlZmM0VDZ2dFQkFObVVsZFJBCmFvdk1tNFBRNVU1ZmlzeTc5SmxlNlkxNk8wMGIyK0RaUEVtUytTOTJJTWl4VmJRcUhBeXJtTXdCTVdOTnV4Yy8KMHBLYmt4WnVEVStaRXg1WER0YnpEWVBjdEJ2MkcySlFtQ0JTaXZac0x1ck9nRlBIaUxHTDMreitZWDZOT0wrcwp4ZWxZS2QxdGFnV2drRjl1cFlHek5FK29qVjltSlZuYTcyd3JEU3c3SFVDY2cvYWRBNXdUUFd0dnNOMXRPdzZNCkVBd2M2Zld3dm9iSFoxaE85RXd6cXRpUWlSdi9SMHJWQ0dzWTVZdzhaclBMbHpoMlE0NlBDZjZ3VUx6d016eGwKSm1FSzc4ZURZVENFZXNmRGJnT0xlOTh6bURuK1BTdmtNby94SjVoNks1N1Nkcm5rd0E3YnBETk9vMmpWT09WQwpaR2FpSXpBVElNMk9QeTBDZ2dFQkFPcEN6ZXFMZE0vRGJGRkxzQVZIT2JnNnlCRndaTWg3ekk2NlRwV09YNnFTCm5GZ1pKcTVyZVBlV2xYNVNVRFV3MHN2bmV3U2RpYU5XZVc1VUFFZE1mNkdKZlZoSUE0WTI2YTVCQTNHTEdLeTcKSmJZVXpOMW00clNObHpkb0pDUkEzZEFiNXNWa3VWaUFnVkxXZFo3MEk3ajNlVTlhLzFOSzEwUkZCdHVMNDZzQgprSllCRmdBUjA4MFFVbVB0OGliZ3A1bHJEN0txa3VxUjJzcVpGSGx3K3YxVE0zcjc0SzNpTGRnbFluSjdhdjJ4Cm0vOWloV3lrekRzSGJqbzU1NE9XeVU0ZUNaYmhGQXJ3YWQxKzk2QlExelhlcnI2VENGMzVQTDRFVEN5ME5rVFAKM256SkZ4VGpxalZyN3M2MGR2OVZkUEJNampRSVFSNldUMzdTejN1WklpVUNnZ0VBT1NnUE0vSzRDb0YxV090SApVWTlIcHdDNUFKRXVTVHdTMSs2NWxCZDgvdGJkSHRxcFFnOVR0RUJibmZoMTZ5RmxGL0VUZE1nUFNQUVZiNDc1CmNDK0dGakpJYzY3bG5mNGNVandVZFg4MmQwYzN1Z1F4VHYxd09KSHlGckhuNFJueUFveVdtOE9IT2dVdStqd0QKM2ZhUDlvSGFlSGZiQmhJQkVVNkVBVmJDRG1oQXpaMjUwWDlNS3p5VDlpd1h0bUZnMU1vYytYVlJ3ZHpXbVBRVgpHTkxKRXltcWcxb1BSMVN3citvZmtFam1MVHdkRVBuTkFPNDZpMXFGNUswdXN2a2VQSVBjOGNDZ2xGMkxINTRqCnFkc2paZGF3ejcyVWpNM0E3M3NhRnEyYm1yUis4azhscGxNalhUSDZRZXp3OVlseTQ5Y2ZXeHBWeGFCU0hnN28KVHhkUEFRS0NBUUF6d3hrZTF6dXpZTG9CYUpqM1FacTJZMzZybzhzUkpaRzRnK0F6V2FjMzJIZGxYQUZaRHZSRwp1T1pGYUVqQ3lBdjc5Q1VSaXdITHJxTGNSd0ZjdjhGLzN4SnNQRlZUQmJVeXhMalBFTzRkMUtocmlFTVFOTmlwCkRwUTRNUEd6ZFFYT0l5d2x0N0RncGx4dEFtZ3cvRDhjY3NwQ1I1Z2RQbTg4YllncllNaW9rNHJ3S2tORE5xMDMKSllFZkJZZTVJWERIRElvR2IzeFJDbk51eXM1a1d4dUtlQ1RxNnRibGRSR3VMZXlINFU5dHlSM3dHMFBpRXJQeAo0eDF2RGpaaXRDRzgraFFpVzQrREwwWWxKQlh4UFl1Z0lwazRFT01MYUxRTVJJVFVaK21KNE9pSGFDT0tnUmV1CkFEQmZTaTcxRWx2cGNQRUcvRC92VTBVemY3OUt6elpsQW9JQkFRREJzS1hlZ2tqQVZBUGsrSHU1NlBFM0g5VCsKVEw0bDY5NVdJRlByOWhMQTZCSmFXUE1vczFHR1VzVis3Z1dLcUxrazkrTDBZamJ3eGZKZlV4b0wwSGd4czh5VgphRkVIVW10RlRBbms4Ukd1Sks4V0lEK2lMWUw1Z0svSGtBZ2VZNTNuUnk3L0tMejZuaHNFa2ZGRXN5UGNZVHBsCkViN0xIczE4Y2s4VXJPT1VIUVZpNzBEK3AvMFBVdkdIVng1VDd3Z2NYRlFUMUc3b0lJUVNieXUvUjVOb2Y2KzAKZWwvaEgrK0lRaXRxRDJGaWJyenFFb1dBc2hYU2NoeVJpTzJBT0VSMWdkY1o1cUVYZmM0RjFrd3lPZ3BYZ2Erawo1aFMxS055aGFldURNTVRVNEFVcUlmRGI3TzU3TDU0a2pqRVBqa0NkOCsxYVRMdUppc0cySzhjWXEyMXMKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K\n    token: b732b096ddd19ea60be42deace1fabf1e02766c1e4512dd9eac58d7e500fadd1440da8f3cabe9bd163b0c94f2fa34a698445f4bba9783d7a815072a08df74807\n",
            "kubelet_identity": [
              {
                "client_id": "cef90890-44c4-457c-960c-8a1497ebdb76",
                "object_id": "73a420c4-1046-43d1-a602-4f572c50a50b",
                "user_assigned_identity_id": "/subscriptions/a4d33dc9-3b4e-470f-8024-10592c821737/resourceGroups/MC_prometheus_prometheus_eastus/providers/Microsoft.ManagedIdentity/userAssignedIdentities/prometheus-agentpool"
              }
            ],
            "kubernetes_version": "1.21.7",
            "linux_profile": [],
            "local_account_disabled": false,
            "location": "eastus",
            "maintenance_window": [],
            "name": "prometheus",
            "network_profile": [
              {
                "dns_service_ip": "10.0.0.10",
                "docker_bridge_cidr": "172.17.0.1/16",
                "load_balancer_profile": [
                  {
                    "effective_outbound_ips": [
                      "/subscriptions/a4d33dc9-3b4e-470f-8024-10592c821737/resourceGroups/MC_prometheus_prometheus_eastus/providers/Microsoft.Network/publicIPAddresses/f36122c6-8320-4ad3-b5e7-7be45a7b4673"
                    ],
                    "idle_timeout_in_minutes": 0,
                    "managed_outbound_ip_count": 1,
                    "outbound_ip_address_ids": [],
                    "outbound_ip_prefix_ids": [],
                    "outbound_ports_allocated": 0
                  }
                ],
                "load_balancer_sku": "standard",
                "nat_gateway_profile": [],
                "network_mode": "",
                "network_plugin": "kubenet",
                "network_policy": "",
                "outbound_type": "loadBalancer",
                "pod_cidr": "10.244.0.0/16",
                "service_cidr": "10.0.0.0/16"
              }
            ],
            "node_resource_group": "MC_prometheus_prometheus_eastus",
            "oms_agent": [],
            "open_service_mesh_enabled": false,
            "portal_fqdn": "prometheus-bbc29743.portal.hcp.eastus.azmk8s.io",
            "private_cluster_enabled": false,
            "private_cluster_public_fqdn_enabled": false,
            "private_dns_zone_id": "",
            "private_fqdn": "",
            "private_link_enabled": false,
            "public_network_access_enabled": true,
            "resource_group_name": "prometheus",
            "role_based_access_control": [
              {
                "azure_active_directory": [],
                "enabled": true
              }
            ],
            "role_based_access_control_enabled": true,
            "service_principal": [],
            "sku_tier": "Free",
            "tags": {},
            "timeouts": null,
            "windows_profile": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo1NDAwMDAwMDAwMDAwLCJkZWxldGUiOjU0MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjo1NDAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIyIn0=",
          "dependencies": [
            "azurerm_resource_group.aks-rg"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_resource_group",
      "name": "aks-rg",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "/subscriptions/a4d33dc9-3b4e-470f-8024-10592c821737/resourceGroups/prometheus",
            "location": "eastus",
            "name": "prometheus",
            "tags": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo1NDAwMDAwMDAwMDAwLCJkZWxldGUiOjU0MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjo1NDAwMDAwMDAwMDAwfX0="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "azurerm_role_assignment",
      "name": "role_acrpull",
      "provider": "provider[\"registry.terraform.io/hashicorp/azurerm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "condition": "",
            "condition_version": "",
            "delegated_managed_identity_resource_id": "",
            "description": "",
            "id": "/subscriptions/a4d33dc9-3b4e-470f-8024-10592c821737/resourceGroups/prometheus/providers/Microsoft.ContainerRegistry/registries/prometheus994432/providers/Microsoft.Authorization/roleAssignments/50662112-cb60-7e4f-62cc-9034e6a5cd43",
            "name": "50662112-cb60-7e4f-62cc-9034e6a5cd43",
            "principal_id": "73a420c4-1046-43d1-a602-4f572c50a50b",
            "principal_type": "ServicePrincipal",
            "role_definition_id": "/subscriptions/a4d33dc9-3b4e-470f-8024-10592c821737/providers/Microsoft.Authorization/roleDefinitions/7f951dda-4ed3-4680-a7ca-43fe172d538d",
            "role_definition_name": "AcrPull",
            "scope": "/subscriptions/a4d33dc9-3b4e-470f-8024-10592c821737/resourceGroups/prometheus/providers/Microsoft.ContainerRegistry/registries/prometheus994432",
            "skip_service_principal_aad_check": true,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInJlYWQiOjMwMDAwMDAwMDAwMCwidXBkYXRlIjoxODAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "azurerm_container_registry.acr",
            "azurerm_kubernetes_cluster.aks",
            "azurerm_resource_group.aks-rg"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "namespace",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "monitoring",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "monitoring",
                "resource_version": "1157",
                "uid": "70adacd0-d31f-4a21-b2ce-a080ba86807d"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "azurerm_kubernetes_cluster.aks",
            "azurerm_resource_group.aks-rg"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "kubeconfig",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUU2VENDQXRHZ0F3SUJBZ0lSQU5vVXRJZm9GSmpFbzNaTnVZa1R3K3d3RFFZSktvWklodmNOQVFFTEJRQXcKRFRFTE1Ba0dBMVVFQXhNQ1kyRXdJQmNOTWpJd016SXdNVGMxTVRBNFdoZ1BNakExTWpBek1qQXhPREF4TURoYQpNQTB4Q3pBSkJnTlZCQU1UQW1OaE1JSUNJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBCndoRTNoU3g2a2JXb1UwR0tZYzRHYkdmQ2hEWS8ydFZQQ1phZmNBdGRDdmtBelpRN0ZPbGxGb0ZoV0NZOTFvWFQKMlJ4K1FuREhWbXgvUGhleHQ5c2VSSXMwckMwSytmNURQeHQ2ZFRpV0ZmVEpXcFJQajJyL2tWZ2NkTGZoTC9HKwoxUi9ORFRuNFhHZDIrNjRLaE9zSHI4NklLYnNIOVBwVzBqc3JyQ1NWcHJEWU55aFV1UEI2aVJaQzhyK0tFdmFMCkZqZ0ZPK0tTMWRZWFJqTEpHR0FSVmkydWRKRXdvSlhRRm4yZEozRE12NUYvU0FQTTg3Qm1LTHc5b1V5WVZhRVYKMm1xYkNQTVQ4bm53T1VrTCs4Uy9VMVU3WGFyVWdUcWJkckZpTFE2RUxRUGpjMERidVZ0SDhTeDN2d0FoOW9HQgpBaGg1dkx0QlJMaGo3L0dpQ3lJVjRYREUrOStJZWozSlZJNjdvblRIeHl4MzlVd3VyNzhjSmNjbHZscFl1T3BrCkRSbEN3NWMzTXR1NnUwWnFyNmFYS3crc3J6VlBHT21ocHBTMWxOc3A3akp5YTlJL2NuaG1CRHNtcytqb3FJU2wKMWJRN1psRndDRlVUcHk2OG5Uc1dnaVVVYkh6SThOeFl3bFJJU2V6LzRIcFBZU29wK2ZHWXlrczJ1R2hBeEN2VgpQaytFOWhTWXY3ZCtjM05rQXc1ZlNBcXNSVkFJcWN4UlZDcENjTXM2R3FRMU8xTXRRUTM0SUNvWlV2VlRYK3VFCkNpN3FveWFGamlPd29POTNMZlFsVU5IRUpON2N6VW5BdXMxcDRqM1ZJaHlLTjlyZHFqL0FseFNrd0JyRGkvZVQKaURqdzg2VVBTcFdVT3FmcDRDUndaa1BVa3pNem1sbUpYWDlubzQrNjNnc0NBd0VBQWFOQ01FQXdEZ1lEVlIwUApBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSUt5RHV3SlVPVHRSY3BsCnFEbTcyT3NuNWRxNk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQmtac1l2NC9ZODNjVkF1cTdKT3N1VzluMEYKb1JSeVltWE1OaGdEaUliWG9VQVJ2VVVhaXFvZGUrblVnWkpreFJ3WUpRV1V3OHljc3ZIWHJrVmVZZE95cGdjRApkVGt3QzUzNy9ScC9DTXJMdTdycDl3RnZhV2pBcU5FTzFDMDNPQjBQMjBZOEhGSDhkWVcxbVNraS9wS0hyQlQzCm10NzRxOVJrWmFLNUlVQlZ5RDVNaUtEL0pPR29aYXNZUHRFK0pmbmk5aFNaZVVMSnhlRmVJZkhQYS95QmZ4REkKbHJYcG1QUmt1dGg4cHUrZ3JEa1hKd0kxejJ3bHUyWVJpSDM5SlFwdlZUUTIxcnBPR1YvbWJVbjRwUEdHWEY3agpmNDFPWDgzMDdDK2pkQ2twUWVYbkptYk0xT1IyN25TV2EwbFEwRkVjQ3gwNVdZaXFFaWt5M3BiRTBvWWJhZ1B0ClZCNktaZmpzRWp5UFVsYi8wTzBBemM3Uyt3QmRuQVFlWHFCRmd6UThYK1RpdjJiT29vTEVMTC9lbVRWUldBcWMKWEpON3RsNFpBc0pMK3BLeVFjNzFKODBEYnFrVnBjU01XeUlpeG1WdDVLeEwvV1NxbEtGbjNlcTdvUkZzTG1GZAp4ZVJ3Ukh1OGtQRXN1M3NVK3MvdWxSblR1aEc2dFV4WWZHVktlVmtsbDN4SWlCeVVFMXYzR0ovUnlPWmlJWGM4CmRGQUxUTzBCM3dEdkhmdjRkNm1MOWxWM0wwLzRTVnpka0tPRzdlb2ZFUzAzeFoyWmdKMmNYTmpPMmkwUXZvZnAKbmpndm9HOWhOMldtNEt4c1dXNkNrNW9VUjQyM0ZUTUlmQkhpMU13SXhabE9EbFVzcVFkTHlZb1dtcmZYMVhSRgpnYU81S29aUXVjeUZSeDEyaXc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    server: https://prometheus-bbc29743.hcp.eastus.azmk8s.io:443\n  name: prometheus\ncontexts:\n- context:\n    cluster: prometheus\n    user: clusterUser_prometheus_prometheus\n  name: prometheus\ncurrent-context: prometheus\nkind: Config\npreferences: {}\nusers:\n- name: clusterUser_prometheus_prometheus\n  user:\n    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZIVENDQXdXZ0F3SUJBZ0lRUGJJWUFML2x4bldxZzVMamhWWWRKREFOQmdrcWhraUc5dzBCQVFzRkFEQU4KTVFzd0NRWURWUVFERXdKallUQWVGdzB5TWpBek1qQXhOelV4TURoYUZ3MHlOREF6TWpBeE9EQXhNRGhhTURBeApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHRZWE4wWlhKamJHbGxiblF3CmdnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUURIR3BoRjkremdIS1RJeVB2b3ZnbEwKc2FOQXNLMGtLcDg0bHRjU0JVd045T2lhNS8zbFBVeU9mREJML0VncVN4bWJVRDJIOW44NDZ3akgyRzNpdVRWLwpibjBkRnBKZGl3S1BzR3FFT0VvMURzQklDc1RCSFQ3c0h2d2paQVNsWFVlSXZOQ1dRc2xqWFQ0bnR6OElSeS80Clp1MjhZNmttZWZVUjM0dXJINmdXRWZWVUJNaC94UlRqV3ZIeENKUGlHL3B6cUZ3VFNTcGQvS0dLMkQzcUdHVnYKajJCYXRid1FwbUdXMVF2UDUwYUN3MTR3d0dYazBHYU9abmJURWVzMHZRNXVhbndjb211bVhESm5Fd3c3ZWRSYgpFWmJPN1NXYVVGYU9mNzk0U0EvNDdINWlXVEtwNXFTOGUvVGc5c0tMYTAvSzBHL1pxY2VzVnpGaHA5SGVyeWJ5CnlQd29YMlVEUFIyWkFpa0I1dFI2eUNXM0ZrK1luM28zK2xTMFhVWFlSaGUyWHpKVlpIK1lFSTlyKzBUdnBmOE4KWDJVT0ZadnV2QVU4bTR6T3c0SXVpcWZNUlBPSFpTZkJlTVluQXptS1dhalRpWktzWGZ3ZzFqVmxWZEphSXFweApYNUpkdTFwallHeG52N2JyYVp1Z21jUVM1cDJZbWI3MStpdmM0Um1lT3RuNzl0cTVza2Jua3JteXlVVElZblQ1CnRWdXhJN21OV0IycllMb2swckl2WlJsKzBGYnVpVlczMXZJem9GSUMxbW9kbDhnOVA4b05hNTh1SWg3REZxQnAKUytZc2RIMG9FZkxVWlpQRVRQN0psVjFSZE9xTWEyRm5ybkxteUF6VHB5RXFaQnBjVk9HcHAwTkFKS3FSZ0lDeQo4OGs0V0NoRk93eUsyVkRMK3RnYmdRSURBUUFCbzFZd1ZEQU9CZ05WSFE4QkFmOEVCQU1DQmFBd0V3WURWUjBsCkJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWZCZ05WSFNNRUdEQVdnQlNDc2c3c0NWRGsKN1VYS1phZzV1OWpySitYYXVqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FnRUFWcVo1bS95Y1lldmcxSTlTUzZnZgo4T044YzBxeDk3WlA5Syt6cGdxUjQ2ckR5bHQ2RmE0ZzdWNGhId1RqeUZRL2R2U1JDMGhSc1RPYko0WUxxelVGCkNGdFdpRUI2TEE0ZGFUMkloL1ZJUWFwL1pnSmtEZFdwQWZsM3orU2FnVWNoaWFwa3pUdnBPaE5uRGEzWUl3c04KYlBkOFowSHZVNHVUV0EwWjU0TU9lM25obkwxSmZKenFwT3dOYnhLaVcxeWpKeFpsWUR5QVZwUmI0MzVRNlZXNwpUQXdhNnhkbWQrWDFvOFl5eTVpZk5lOVcwUGwzSUZEYTVwK2NUNXBsbjl2a2VEZElnRCs0c3hlaFJEMDRIc1FqCjZwa1VnSjQvbVRvbnlKSlBkMGVpMzluV3ByQjc2cllaT0FaSWlNRTQ5UGxkYUlraGNUNVcwMWdWRCtwUGdPQXUKd2xjU05pWnFRdk1ZenU0a0w5WHNob3QvenZ2a1VheTIralFmajZMbEVwWGhWRlhzWjMraUg3bGJlVVY3WVhFRwpaSWpMSkRZZm5ROUgxVEg1WENQeGR2b25RRUN4ZWd3aVFCcWx3azNaYmZBY1MxaXRXU28yczdhMlZSMXhYeVN1CnJhVWEraVNkMVlrdVVkbzB4M0tSdDNsbEU1aU9Ma0JiMzg2SEt3ZjZQQjUvTkhqYWVoMlp0QUlVWk9lQVlYQ2gKVTNZdXM4U0NoSEtkaW93c2s3dlFKTUxobk44c0FPcmhDNkw2WEg0NUtGNWxwZTc1TFpzVEtocWs5RU5QNFNTdgpaWG9wU1FqV0ZBZ2RSdFI5bTBnTHZlZDAvMjhlY3EzbUtYdU9MdER3NTI3bkRjbDlHRnkyRTlyMGl4Zkl0QUxhCmtHa3hwSEFCeGNrZkltazg4dVYyM0MwPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\n    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBeHhxWVJmZnM0QnlreU1qNzZMNEpTN0dqUUxDdEpDcWZPSmJYRWdWTURmVG9tdWY5CjVUMU1qbnd3Uy94SUtrc1ptMUE5aC9aL09Pc0l4OWh0NHJrMWYyNTlIUmFTWFlzQ2o3QnFoRGhLTlE3QVNBckUKd1IwKzdCNzhJMlFFcFYxSGlMelFsa0xKWTEwK0o3Yy9DRWN2K0didHZHT3BKbm4xRWQrTHF4K29GaEgxVkFUSQpmOFVVNDFyeDhRaVQ0aHY2YzZoY0Uwa3FYZnloaXRnOTZoaGxiNDlnV3JXOEVLWmhsdFVMeitkR2dzTmVNTUJsCjVOQm1qbVoyMHhIck5MME9ibXA4SEtKcnBsd3laeE1NTzNuVVd4R1d6dTBsbWxCV2puKy9lRWdQK094K1lsa3kKcWVha3ZIdjA0UGJDaTJ0UHl0QnYyYW5IckZjeFlhZlIzcThtOHNqOEtGOWxBejBkbVFJcEFlYlVlc2dsdHhaUAptSjk2Ti9wVXRGMUYyRVlYdGw4eVZXUi9tQkNQYS90RTc2WC9EVjlsRGhXYjdyd0ZQSnVNenNPQ0xvcW56RVR6CmgyVW53WGpHSndNNWlsbW8wNG1TckYzOElOWTFaVlhTV2lLcWNWK1NYYnRhWTJCc1o3KzI2Mm1ib0puRUV1YWQKbUptKzlmb3IzT0VabmpyWisvYmF1YkpHNTVLNXNzbEV5R0owK2JWYnNTTzVqVmdkcTJDNkpOS3lMMlVaZnRCVwo3b2xWdDlieU02QlNBdFpxSFpmSVBUL0tEV3VmTGlJZXd4YWdhVXZtTEhSOUtCSHkxR1dUeEV6K3laVmRVWFRxCmpHdGhaNjV5NXNnTTA2Y2hLbVFhWEZUaHFhZERRQ1Nxa1lDQXN2UEpPRmdvUlRzTWl0bFF5L3JZRzRFQ0F3RUEKQVFLQ0FnRUF3SlFEcHVGM3R3bGRoV3VJNUlReS80alE2N2czcjl5ZDVxRlhZdkhHcjFVc1N2Q0xUbGh0SFFBWAp3dGRBZ2Mvajg2cTM2VE5OdUtMMCtqOW5nYjA4ZG9aSzg0Q3FqMW51WDBiMnIrNjJMLzJWazlqK2wvOE9wbG9OCjdMbElHUjVSRzN2dGtQa0dTMXFiek5SY1hraGtxTEg5enBMaXYvbUVSZ1pmMUdPcE03ZW8vOXdraGhqODdDOUMKQnE0U1E4aG1CY3BaVExvZkJZdGVRS3FKc0V4cWlHNDRkMlNDZytRNlRpYkE1eFcreUtucEIrU0FhY0g5QUUweApMMVNNbUpVb1NUb3IwNUp4NXhZVUZraUJNMkhTT1VlWkE0cXpMVC81aUprZGZGelBQaWlZMGMyT3lIRHk4L0E5CldmNnpDeUQvcTU3U0lNa3IvWkRVamExQnZFN1RycG9ZQnl1REZBYU01RmViUmNWUm1KSUE5V3hYU1FNMG5VcFIKZ0ZiU3E2dGpNOHIreG5ET2RSZFJNVmw2Q1g0TFo1QzVKZ0JGQ1Bvdnd2cTRvQUhqZEhpOUlrb2dBakowRjFNMgp1MmI5TW5maWNlVTd2LzRPbmZWc3NCbnVMM2RucEtSZ3hiREI3Z3Q1UUEvTDZoMW5aZ2gyOUtpSjZ0RWU4dk9sClE3eS9FZWJ2UUVoSzhLVWRPRE8rdEZ4alNvSkFlOG00VkthQ0UrdXIxZHhtNTIxYUxES0NicWZHOWVpTDRvWjgKNFpxMUhxS2NsOVhYZk1TQytIaXRBdFp4d0dYcHdGTnF5VGU0cGtJNlRmdkdiQjFMQ29hekp2U3RqbGdLdDhGSQppOGRLNWl1WG5HYTVmT3U3N09CbStZZTVtNllSODJRVkF0OFlnK3JlTzRXRGwvMlZmM0VDZ2dFQkFObVVsZFJBCmFvdk1tNFBRNVU1ZmlzeTc5SmxlNlkxNk8wMGIyK0RaUEVtUytTOTJJTWl4VmJRcUhBeXJtTXdCTVdOTnV4Yy8KMHBLYmt4WnVEVStaRXg1WER0YnpEWVBjdEJ2MkcySlFtQ0JTaXZac0x1ck9nRlBIaUxHTDMreitZWDZOT0wrcwp4ZWxZS2QxdGFnV2drRjl1cFlHek5FK29qVjltSlZuYTcyd3JEU3c3SFVDY2cvYWRBNXdUUFd0dnNOMXRPdzZNCkVBd2M2Zld3dm9iSFoxaE85RXd6cXRpUWlSdi9SMHJWQ0dzWTVZdzhaclBMbHpoMlE0NlBDZjZ3VUx6d016eGwKSm1FSzc4ZURZVENFZXNmRGJnT0xlOTh6bURuK1BTdmtNby94SjVoNks1N1Nkcm5rd0E3YnBETk9vMmpWT09WQwpaR2FpSXpBVElNMk9QeTBDZ2dFQkFPcEN6ZXFMZE0vRGJGRkxzQVZIT2JnNnlCRndaTWg3ekk2NlRwV09YNnFTCm5GZ1pKcTVyZVBlV2xYNVNVRFV3MHN2bmV3U2RpYU5XZVc1VUFFZE1mNkdKZlZoSUE0WTI2YTVCQTNHTEdLeTcKSmJZVXpOMW00clNObHpkb0pDUkEzZEFiNXNWa3VWaUFnVkxXZFo3MEk3ajNlVTlhLzFOSzEwUkZCdHVMNDZzQgprSllCRmdBUjA4MFFVbVB0OGliZ3A1bHJEN0txa3VxUjJzcVpGSGx3K3YxVE0zcjc0SzNpTGRnbFluSjdhdjJ4Cm0vOWloV3lrekRzSGJqbzU1NE9XeVU0ZUNaYmhGQXJ3YWQxKzk2QlExelhlcnI2VENGMzVQTDRFVEN5ME5rVFAKM256SkZ4VGpxalZyN3M2MGR2OVZkUEJNampRSVFSNldUMzdTejN1WklpVUNnZ0VBT1NnUE0vSzRDb0YxV090SApVWTlIcHdDNUFKRXVTVHdTMSs2NWxCZDgvdGJkSHRxcFFnOVR0RUJibmZoMTZ5RmxGL0VUZE1nUFNQUVZiNDc1CmNDK0dGakpJYzY3bG5mNGNVandVZFg4MmQwYzN1Z1F4VHYxd09KSHlGckhuNFJueUFveVdtOE9IT2dVdStqd0QKM2ZhUDlvSGFlSGZiQmhJQkVVNkVBVmJDRG1oQXpaMjUwWDlNS3p5VDlpd1h0bUZnMU1vYytYVlJ3ZHpXbVBRVgpHTkxKRXltcWcxb1BSMVN3citvZmtFam1MVHdkRVBuTkFPNDZpMXFGNUswdXN2a2VQSVBjOGNDZ2xGMkxINTRqCnFkc2paZGF3ejcyVWpNM0E3M3NhRnEyYm1yUis4azhscGxNalhUSDZRZXp3OVlseTQ5Y2ZXeHBWeGFCU0hnN28KVHhkUEFRS0NBUUF6d3hrZTF6dXpZTG9CYUpqM1FacTJZMzZybzhzUkpaRzRnK0F6V2FjMzJIZGxYQUZaRHZSRwp1T1pGYUVqQ3lBdjc5Q1VSaXdITHJxTGNSd0ZjdjhGLzN4SnNQRlZUQmJVeXhMalBFTzRkMUtocmlFTVFOTmlwCkRwUTRNUEd6ZFFYT0l5d2x0N0RncGx4dEFtZ3cvRDhjY3NwQ1I1Z2RQbTg4YllncllNaW9rNHJ3S2tORE5xMDMKSllFZkJZZTVJWERIRElvR2IzeFJDbk51eXM1a1d4dUtlQ1RxNnRibGRSR3VMZXlINFU5dHlSM3dHMFBpRXJQeAo0eDF2RGpaaXRDRzgraFFpVzQrREwwWWxKQlh4UFl1Z0lwazRFT01MYUxRTVJJVFVaK21KNE9pSGFDT0tnUmV1CkFEQmZTaTcxRWx2cGNQRUcvRC92VTBVemY3OUt6elpsQW9JQkFRREJzS1hlZ2tqQVZBUGsrSHU1NlBFM0g5VCsKVEw0bDY5NVdJRlByOWhMQTZCSmFXUE1vczFHR1VzVis3Z1dLcUxrazkrTDBZamJ3eGZKZlV4b0wwSGd4czh5VgphRkVIVW10RlRBbms4Ukd1Sks4V0lEK2lMWUw1Z0svSGtBZ2VZNTNuUnk3L0tMejZuaHNFa2ZGRXN5UGNZVHBsCkViN0xIczE4Y2s4VXJPT1VIUVZpNzBEK3AvMFBVdkdIVng1VDd3Z2NYRlFUMUc3b0lJUVNieXUvUjVOb2Y2KzAKZWwvaEgrK0lRaXRxRDJGaWJyenFFb1dBc2hYU2NoeVJpTzJBT0VSMWdkY1o1cUVYZmM0RjFrd3lPZ3BYZ2Erawo1aFMxS055aGFldURNTVRVNEFVcUlmRGI3TzU3TDU0a2pqRVBqa0NkOCsxYVRMdUppc0cySzhjWXEyMXMKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K\n    token: b732b096ddd19ea60be42deace1fabf1e02766c1e4512dd9eac58d7e500fadd1440da8f3cabe9bd163b0c94f2fa34a698445f4bba9783d7a815072a08df74807\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "kubeconfig",
            "id": "8bd37653d149b4ba1ee8f118d8ecd2af81b8ebde",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "content"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "azurerm_kubernetes_cluster.aks",
            "azurerm_resource_group.aks-rg"
          ]
        }
      ]
    },
    {
      "module": "module.cert-manager",
      "mode": "data",
      "type": "kubernetes_service",
      "name": "traefik",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "monitoring/traefik",
            "metadata": [
              {
                "annotations": {
                  "meta.helm.sh/release-name": "traefik",
                  "meta.helm.sh/release-namespace": "monitoring"
                },
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/instance": "traefik",
                  "app.kubernetes.io/managed-by": "Helm",
                  "app.kubernetes.io/name": "traefik",
                  "helm.sh/chart": "traefik-9.18.2"
                },
                "name": "traefik",
                "namespace": "monitoring",
                "resource_version": "1594",
                "uid": "74cb6394-e0c6-403d-b444-e47045221494"
              }
            ],
            "spec": [
              {
                "cluster_ip": "10.0.253.123",
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "name": "web",
                    "node_port": 32539,
                    "port": 80,
                    "protocol": "TCP",
                    "target_port": "web"
                  },
                  {
                    "name": "websecure",
                    "node_port": 30429,
                    "port": 443,
                    "protocol": "TCP",
                    "target_port": "websecure"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app.kubernetes.io/instance": "traefik",
                  "app.kubernetes.io/name": "traefik"
                },
                "session_affinity": "None",
                "type": "LoadBalancer"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": [
                      {
                        "hostname": "",
                        "ip": "40.88.216.81"
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.cert-manager",
      "mode": "managed",
      "type": "cloudflare_record",
      "name": "traefik",
      "provider": "module.cert-manager.provider[\"registry.terraform.io/cloudflare/cloudflare\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "allow_overwrite": false,
            "created_on": "2022-03-20T18:05:29.688278Z",
            "data": [],
            "hostname": "grafana1648factory.net.grafana.net",
            "id": "6044e83d7a2fa0828fd76524776cb893",
            "metadata": {
              "auto_added": "false",
              "managed_by_apps": "false",
              "managed_by_argo_tunnel": "false",
              "source": "primary"
            },
            "modified_on": "2022-03-20T18:05:29.688278Z",
            "name": "grafana1648factory.net",
            "priority": null,
            "proxiable": true,
            "proxied": true,
            "timeouts": null,
            "ttl": 1,
            "type": "A",
            "value": "40.88.216.81",
            "zone_id": "e617733fb42a7dc87c2bf4bd417daf9a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMCwidXBkYXRlIjozMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "azurerm_kubernetes_cluster.aks",
            "azurerm_resource_group.aks-rg",
            "module.cert-manager.data.kubernetes_service.traefik",
            "module.cert-manager.helm_release.traefik"
          ]
        }
      ]
    },
    {
      "module": "module.cert-manager",
      "mode": "managed",
      "type": "helm_release",
      "name": "cert_manager",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "cert-manager",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "cert-manager",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v1.3.1",
                "chart": "cert-manager",
                "name": "cert-manager",
                "namespace": "monitoring",
                "revision": 1,
                "values": "{\"installCRDs\":true}",
                "version": "v1.3.1"
              }
            ],
            "name": "cert-manager",
            "namespace": "monitoring",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://charts.jetstack.io",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "installCRDs",
                "type": "",
                "value": "true"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "v1.3.1",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "azurerm_kubernetes_cluster.aks",
            "azurerm_resource_group.aks-rg"
          ]
        }
      ]
    },
    {
      "module": "module.cert-manager",
      "mode": "managed",
      "type": "helm_release",
      "name": "traefik",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "traefik",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "traefik",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "2.4.8",
                "chart": "traefik",
                "name": "traefik",
                "namespace": "monitoring",
                "revision": 1,
                "values": "{\"additionalArguments\":[\"--entryPoints.websecure.forwardedHeaders.trustedIPs=10.0.0.0/8\"]}",
                "version": "9.18.2"
              }
            ],
            "name": "traefik",
            "namespace": "monitoring",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://helm.traefik.io/traefik",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "additionalArguments",
                "type": "",
                "value": "{--entryPoints.websecure.forwardedHeaders.trustedIPs=10.0.0.0/8}"
              }
            ],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": null,
            "verify": false,
            "version": "9.18.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "azurerm_kubernetes_cluster.aks",
            "azurerm_resource_group.aks-rg"
          ]
        }
      ]
    },
    {
      "module": "module.cert-manager",
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "cert_manager",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "cert-manager",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "cert-manager",
                "resource_version": "1126",
                "uid": "fe0187d2-d638-40e9-9a9c-0496205e43ec"
              }
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "azurerm_kubernetes_cluster.aks",
            "azurerm_resource_group.aks-rg"
          ]
        }
      ]
    },
    {
      "module": "module.grafana",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "configmap",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "datasources.yaml": "{\n  \"apiVersion\": 1,\n  \"datasources\": [\n    {\n      \"access\": \"proxy\",\n      \"editable\": true,\n      \"name\": \"prometheus\",\n      \"orgId\": 1,\n      \"type\": \"prometheus\",\n      \"url\": \"http://prometheus-service.monitoring.svc:8080\",\n      \"version\": 1\n    }\n  ]\n}"
            },
            "id": "monitoring/grafana-datasources",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "name": "grafana-datasources"
                },
                "name": "grafana-datasources",
                "namespace": "monitoring",
                "resource_version": "1162",
                "uid": "9b8f7b27-c484-4d3a-8f04-3a0a30801a63"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "azurerm_kubernetes_cluster.aks",
            "azurerm_resource_group.aks-rg"
          ]
        }
      ]
    },
    {
      "module": "module.grafana",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "deployment",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "monitoring/grafana",
            "metadata": [
              {
                "annotations": {
                  "configmap.reloader.stakater.com/reload": "grafana-datasources"
                },
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "app": "grafana"
                },
                "name": "grafana",
                "namespace": "monitoring",
                "resource_version": "1238",
                "uid": "540759df-cfe6-45bd-88ce-6b331aa2c3eb"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "grafana"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "1",
                        "max_unavailable": "33%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "grafana"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "grafana/grafana:latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "grafana",
                            "port": [
                              {
                                "container_port": 3000,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "grafana",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": {
                                  "cpu": "4",
                                  "memory": "4Gi"
                                },
                                "requests": {
                                  "cpu": "500m",
                                  "memory": "500M"
                                }
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [
                              {
                                "mount_path": "/var/lib/grafana",
                                "mount_propagation": "None",
                                "name": "grafana-storage",
                                "read_only": false,
                                "sub_path": ""
                              },
                              {
                                "mount_path": "/etc/grafana/provisioning/datasources",
                                "mount_propagation": "None",
                                "name": "grafana-datasources",
                                "read_only": false,
                                "sub_path": ""
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "security_context": [
                          {
                            "fs_group": "472",
                            "run_as_group": "",
                            "run_as_non_root": false,
                            "run_as_user": "",
                            "se_linux_options": [],
                            "supplemental_groups": [],
                            "sysctl": []
                          }
                        ],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [
                              {
                                "medium": "",
                                "size_limit": ""
                              }
                            ],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "grafana-storage",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          },
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "grafana-datasources",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "grafana-datasources",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "azurerm_kubernetes_cluster.aks",
            "module.grafana.kubernetes_config_map.configmap"
          ]
        }
      ]
    },
    {
      "module": "module.grafana",
      "mode": "managed",
      "type": "kubernetes_ingress",
      "name": "ingress",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "monitoring/grafana",
            "metadata": [
              {
                "annotations": {
                  "cert-manager.io/cluster-issuer": "letsencrypt-staging",
                  "traefik.ingress.kubernetes.io/router.tls": "true"
                },
                "generate_name": "",
                "generation": 1,
                "labels": {},
                "name": "grafana",
                "namespace": "monitoring",
                "resource_version": "1163",
                "uid": "544011e0-1c43-4035-8fe3-fa76f57b9033"
              }
            ],
            "spec": [
              {
                "backend": [],
                "ingress_class_name": "",
                "rule": [
                  {
                    "host": "grafana1648factory.net",
                    "http": [
                      {
                        "path": [
                          {
                            "backend": [
                              {
                                "service_name": "grafana",
                                "service_port": "3000"
                              }
                            ],
                            "path": "/"
                          }
                        ]
                      }
                    ]
                  }
                ],
                "tls": [
                  {
                    "hosts": [
                      "grafana1648factory.net"
                    ],
                    "secret_name": "prometheus-tls-secret"
                  }
                ]
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "wait_for_load_balancer": null
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "azurerm_kubernetes_cluster.aks",
            "azurerm_resource_group.aks-rg"
          ]
        }
      ]
    },
    {
      "module": "module.grafana",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "monitoring/grafana",
            "metadata": [
              {
                "annotations": {
                  "prometheus.io/port": "3000",
                  "prometheus.io/scrape": "true"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "grafana",
                "namespace": "monitoring",
                "resource_version": "1168",
                "uid": "fc4baea6-eec1-4a72-851f-edc90256aef5"
              }
            ],
            "spec": [
              {
                "cluster_ip": "10.0.159.69",
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "name": "",
                    "node_port": 32000,
                    "port": 3000,
                    "protocol": "TCP",
                    "target_port": "3000"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "grafana"
                },
                "session_affinity": "None",
                "type": "NodePort"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "azurerm_kubernetes_cluster.aks",
            "azurerm_resource_group.aks-rg"
          ]
        }
      ]
    },
    {
      "module": "module.kube-state-metrics",
      "mode": "managed",
      "type": "kubernetes_cluster_role",
      "name": "clusterRole",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "aggregation_rule": [],
            "id": "kube-state-metrics",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/name": "kube-state-metrics",
                  "app.kubernetes.io/version": "latest"
                },
                "name": "kube-state-metrics",
                "resource_version": "1164",
                "uid": "33275e57-7975-4856-aa1d-98a1397f8642"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  ""
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "configmaps",
                  "secrets",
                  "nodes",
                  "pods",
                  "services",
                  "resourcequotas",
                  "replicationcontrollers",
                  "limitranges",
                  "persistentvolumeclaims",
                  "persistentvolumes",
                  "namespaces",
                  "endpoints"
                ],
                "verbs": [
                  "list",
                  "watch"
                ]
              },
              {
                "api_groups": [
                  "extensions"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "daemonsets",
                  "deployments",
                  "replicasets",
                  "ingresses"
                ],
                "verbs": [
                  "list",
                  "watch"
                ]
              },
              {
                "api_groups": [
                  "apps"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "daemonsets",
                  "statefulsets",
                  "deployments",
                  "replicasets"
                ],
                "verbs": [
                  "list",
                  "watch"
                ]
              },
              {
                "api_groups": [
                  "batch"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "cronjobs",
                  "jobs"
                ],
                "verbs": [
                  "list",
                  "watch"
                ]
              },
              {
                "api_groups": [
                  "autoscaling"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "horizontalpodautoscalers"
                ],
                "verbs": [
                  "list",
                  "watch"
                ]
              },
              {
                "api_groups": [
                  "authentication.k8s.io"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "tokenreviews"
                ],
                "verbs": [
                  "create"
                ]
              },
              {
                "api_groups": [
                  "authorization.k8s.io"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "subjectaccessreviews"
                ],
                "verbs": [
                  "create"
                ]
              },
              {
                "api_groups": [
                  "policy"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "poddisruptionbudgets"
                ],
                "verbs": [
                  "list",
                  "watch"
                ]
              },
              {
                "api_groups": [
                  "certificates.k8s.io"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "certificatesigningrequests"
                ],
                "verbs": [
                  "list",
                  "watch"
                ]
              },
              {
                "api_groups": [
                  "storage.k8s.io"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "storageclasses",
                  "volumeattachments"
                ],
                "verbs": [
                  "list",
                  "watch"
                ]
              },
              {
                "api_groups": [
                  "admissionregistration.k8s.io"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "mutatingwebhookconfigurations",
                  "validatingwebhookconfigurations"
                ],
                "verbs": [
                  "list",
                  "watch"
                ]
              },
              {
                "api_groups": [
                  "networking.k8s.io"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "networkpolicies"
                ],
                "verbs": [
                  "list",
                  "watch"
                ]
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "azurerm_kubernetes_cluster.aks",
            "azurerm_resource_group.aks-rg"
          ]
        }
      ]
    },
    {
      "module": "module.kube-state-metrics",
      "mode": "managed",
      "type": "kubernetes_cluster_role_binding",
      "name": "clisterRoleBinding",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "kube-state-metrics",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/name": "kube-state-metrics",
                  "app.kubernetes.io/version": "latest"
                },
                "name": "kube-state-metrics",
                "resource_version": "1122",
                "uid": "7a4a7982-0fef-474d-86d7-8ed132fb963e"
              }
            ],
            "role_ref": [
              {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "kube-state-metrics"
              }
            ],
            "subject": [
              {
                "api_group": "",
                "kind": "ServiceAccount",
                "name": "kube-state-metrics",
                "namespace": "kube-system"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "azurerm_kubernetes_cluster.aks",
            "azurerm_resource_group.aks-rg"
          ]
        }
      ]
    },
    {
      "module": "module.kube-state-metrics",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "deployment",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "kube-system/kube-state-metrics",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "app.kubernetes.io/name": "kube-state-metrics",
                  "app.kubernetes.io/version": "latest"
                },
                "name": "kube-state-metrics",
                "namespace": "kube-system",
                "resource_version": "1228",
                "uid": "efff6977-dc26-4a61-857b-961b655f94cc"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app.kubernetes.io/name": "kube-state-metrics"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "1",
                        "max_unavailable": "33%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app.kubernetes.io/name": "kube-state-metrics",
                          "app.kubernetes.io/version": "latest"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "quay.io/coreos/kube-state-metrics:latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 3,
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/healthz",
                                    "port": "8080",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 5,
                                "period_seconds": 10,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 5
                              }
                            ],
                            "name": "kube-state-metrics",
                            "port": [
                              {
                                "container_port": 8080,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "http-metrics",
                                "protocol": "TCP"
                              },
                              {
                                "container_port": 8081,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "telemetry",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [
                              {
                                "exec": [],
                                "failure_threshold": 3,
                                "http_get": [
                                  {
                                    "host": "",
                                    "http_header": [],
                                    "path": "/",
                                    "port": "8081",
                                    "scheme": "HTTP"
                                  }
                                ],
                                "initial_delay_seconds": 5,
                                "period_seconds": 10,
                                "success_threshold": 1,
                                "tcp_socket": [],
                                "timeout_seconds": 5
                              }
                            ],
                            "resources": [
                              {
                                "limits": null,
                                "requests": null
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "security_context": [],
                        "service_account_name": "kube-state-metrics",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": []
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "azurerm_kubernetes_cluster.aks",
            "azurerm_resource_group.aks-rg"
          ]
        }
      ]
    },
    {
      "module": "module.kube-state-metrics",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "kube-system/kube-state-metrics",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/name": "kube-state-metrics",
                  "app.kubernetes.io/version": "latest"
                },
                "name": "kube-state-metrics",
                "namespace": "kube-system",
                "resource_version": "1152",
                "uid": "7360565f-373f-4047-9697-0081f1576aca"
              }
            ],
            "spec": [
              {
                "cluster_ip": "None",
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "",
                "health_check_node_port": 0,
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "name": "http-metrics",
                    "node_port": 0,
                    "port": 8080,
                    "protocol": "TCP",
                    "target_port": "http-metrics"
                  },
                  {
                    "name": "telemetry",
                    "node_port": 0,
                    "port": 8081,
                    "protocol": "TCP",
                    "target_port": "telemetry"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app.kubernetes.io/name": "kube-state-metrics"
                },
                "session_affinity": "None",
                "type": "ClusterIP"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "azurerm_kubernetes_cluster.aks",
            "azurerm_resource_group.aks-rg"
          ]
        }
      ]
    },
    {
      "module": "module.kube-state-metrics",
      "mode": "managed",
      "type": "kubernetes_service_account",
      "name": "service-account",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "automount_service_account_token": true,
            "default_secret_name": "kube-state-metrics-token-j2fgb",
            "id": "kube-system/kube-state-metrics",
            "image_pull_secret": [],
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "app.kubernetes.io/name": "kube-state-metrics",
                  "app.kubernetes.io/version": "latest"
                },
                "name": "kube-state-metrics",
                "namespace": "kube-system",
                "resource_version": "1141",
                "uid": "1e582807-523c-4bc8-83c1-8363e44fc419"
              }
            ],
            "secret": [],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMH19",
          "dependencies": [
            "azurerm_kubernetes_cluster.aks",
            "azurerm_resource_group.aks-rg"
          ]
        }
      ]
    },
    {
      "module": "module.prometheus",
      "mode": "managed",
      "type": "kubernetes_cluster_role",
      "name": "clusterRole",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "aggregation_rule": [],
            "id": "prometheus",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "prometheus",
                "resource_version": "1153",
                "uid": "773c92f4-d26b-4d37-b410-223832329a7a"
              }
            ],
            "rule": [
              {
                "api_groups": [
                  ""
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "nodes",
                  "nodes/proxy",
                  "services",
                  "endpoints",
                  "pods"
                ],
                "verbs": [
                  "get",
                  "list",
                  "watch"
                ]
              },
              {
                "api_groups": [
                  "extensions"
                ],
                "non_resource_urls": [],
                "resource_names": [],
                "resources": [
                  "ingresses"
                ],
                "verbs": [
                  "get",
                  "list",
                  "watch"
                ]
              },
              {
                "api_groups": [],
                "non_resource_urls": [
                  "/metrics"
                ],
                "resource_names": [],
                "resources": [],
                "verbs": [
                  "get"
                ]
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "azurerm_kubernetes_cluster.aks",
            "azurerm_resource_group.aks-rg"
          ]
        }
      ]
    },
    {
      "module": "module.prometheus",
      "mode": "managed",
      "type": "kubernetes_cluster_role_binding",
      "name": "clisterRoleBinding",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "prometheus",
            "metadata": [
              {
                "annotations": {},
                "generation": 0,
                "labels": {},
                "name": "prometheus",
                "resource_version": "1156",
                "uid": "1ff2d3b6-e581-45f5-8cd8-489b0396f7fd"
              }
            ],
            "role_ref": [
              {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "prometheus"
              }
            ],
            "subject": [
              {
                "api_group": "",
                "kind": "ServiceAccount",
                "name": "default",
                "namespace": "monitoring"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "azurerm_kubernetes_cluster.aks",
            "azurerm_resource_group.aks-rg"
          ]
        }
      ]
    },
    {
      "module": "module.prometheus",
      "mode": "managed",
      "type": "kubernetes_config_map",
      "name": "configmap",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "binary_data": {},
            "data": {
              "prometheus.rules": "groups:\n- name: devopscube demo alert\n  rules:\n  - alert: High Pod Memory\n    expr: sum(container_memory_usage_bytes) \u003e 1\n    for: 2m\n    labels:\n      severity: slack\n    annotations:\n      summary: High Memory Usage",
              "prometheus.yml": "global:\n  scrape_interval: 5s\n  evaluation_interval: 5s\nrule_files:\n- \"/etc/prometheus/prometheus.rules\"\nalerting:\n  alertmanagers:\n  - scheme: http\n    static_configs:\n    - targets:\n      - alertmanager.monitoring.svc:9093\nscrape_configs:\n- job_name: 'node-exporter'\n  kubernetes_sd_configs:\n    - role: endpoints\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_endpoints_name]\n    regex: 'node-exporter'\n    action: keep\n- job_name: kubernetes-apiservers\n  kubernetes_sd_configs:\n  - role: endpoints\n  scheme: https\n  tls_config:\n    ca_file: \"/var/run/secrets/kubernetes.io/serviceaccount/ca.crt\"\n  bearer_token_file: \"/var/run/secrets/kubernetes.io/serviceaccount/token\"\n  relabel_configs:\n  - source_labels:\n    - __meta_kubernetes_namespace\n    - __meta_kubernetes_service_name\n    - __meta_kubernetes_endpoint_port_name\n    action: keep\n    regex: default;kubernetes;https\n- job_name: kubernetes-nodes\n  scheme: https\n  tls_config:\n    ca_file: \"/var/run/secrets/kubernetes.io/serviceaccount/ca.crt\"\n  bearer_token_file: \"/var/run/secrets/kubernetes.io/serviceaccount/token\"\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - target_label: __address__\n    replacement: kubernetes.default.svc:443\n  - source_labels:\n    - __meta_kubernetes_node_name\n    regex: \"(.+)\"\n    target_label: __metrics_path__\n    replacement: \"/api/v1/nodes/${1}/proxy/metrics\"\n- job_name: kubernetes-pods\n  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:\n  - source_labels:\n    - __meta_kubernetes_pod_annotation_prometheus_io_scrape\n    action: keep\n    regex: true\n  - source_labels:\n    - __meta_kubernetes_pod_annotation_prometheus_io_path\n    action: replace\n    target_label: __metrics_path__\n    regex: \"(.+)\"\n  - source_labels:\n    - __address__\n    - __meta_kubernetes_pod_annotation_prometheus_io_port\n    action: replace\n    regex: \"([^:]+)(?::\\\\d+)?;(\\\\d+)\"\n    replacement: \"$1:$2\"\n    target_label: __address__\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_(.+)\n  - source_labels:\n    - __meta_kubernetes_namespace\n    action: replace\n    target_label: kubernetes_namespace\n  - source_labels:\n    - __meta_kubernetes_pod_name\n    action: replace\n    target_label: kubernetes_pod_name\n- job_name: kube-state-metrics\n  static_configs:\n  - targets:\n    - kube-state-metrics.kube-system.svc.cluster.local:8080\n- job_name: kubernetes-cadvisor\n  scheme: https\n  tls_config:\n    ca_file: \"/var/run/secrets/kubernetes.io/serviceaccount/ca.crt\"\n  bearer_token_file: \"/var/run/secrets/kubernetes.io/serviceaccount/token\"\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - target_label: __address__\n    replacement: kubernetes.default.svc:443\n  - source_labels:\n    - __meta_kubernetes_node_name\n    regex: \"(.+)\"\n    target_label: __metrics_path__\n    replacement: \"/api/v1/nodes/${1}/proxy/metrics/cadvisor\"\n- job_name: kubernetes-service-endpoints\n  kubernetes_sd_configs:\n  - role: endpoints\n  relabel_configs:\n  - source_labels:\n    - __meta_kubernetes_service_annotation_prometheus_io_scrape\n    action: keep\n    regex: true\n  - source_labels:\n    - __meta_kubernetes_service_annotation_prometheus_io_scheme\n    action: replace\n    target_label: __scheme__\n    regex: \"(https?)\"\n  - source_labels:\n    - __meta_kubernetes_service_annotation_prometheus_io_path\n    action: replace\n    target_label: __metrics_path__\n    regex: \"(.+)\"\n  - source_labels:\n    - __address__\n    - __meta_kubernetes_service_annotation_prometheus_io_port\n    action: replace\n    target_label: __address__\n    regex: \"([^:]+)(?::\\\\d+)?;(\\\\d+)\"\n    replacement: \"$1:$2\"\n  - action: labelmap\n    regex: __meta_kubernetes_service_label_(.+)\n  - source_labels:\n    - __meta_kubernetes_namespace\n    action: replace\n    target_label: kubernetes_namespace\n  - source_labels:\n    - __meta_kubernetes_service_name\n    action: replace\n    target_label: kubernetes_name"
            },
            "id": "monitoring/prometheus-server-conf",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {
                  "name": "prometheus-server-conf"
                },
                "name": "prometheus-server-conf",
                "namespace": "monitoring",
                "resource_version": "36939",
                "uid": "7583c46e-f337-452f-8e07-fa4b2c3abc3d"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "azurerm_kubernetes_cluster.aks"
          ]
        }
      ]
    },
    {
      "module": "module.prometheus",
      "mode": "managed",
      "type": "kubernetes_deployment",
      "name": "deployment",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "monitoring/prometheus-deployment",
            "metadata": [
              {
                "annotations": {
                  "configmap.reloader.stakater.com/reload": "prometheus-server-conf"
                },
                "generate_name": "",
                "generation": 1,
                "labels": {
                  "app": "prometheus-server"
                },
                "name": "prometheus-deployment",
                "namespace": "monitoring",
                "resource_version": "26926",
                "uid": "78a4f3a5-48ad-4901-b936-8af3e542c78c"
              }
            ],
            "spec": [
              {
                "min_ready_seconds": 0,
                "paused": false,
                "progress_deadline_seconds": 600,
                "replicas": "1",
                "revision_history_limit": 10,
                "selector": [
                  {
                    "match_expressions": [],
                    "match_labels": {
                      "app": "prometheus-server"
                    }
                  }
                ],
                "strategy": [
                  {
                    "rolling_update": [
                      {
                        "max_surge": "1",
                        "max_unavailable": "33%"
                      }
                    ],
                    "type": "RollingUpdate"
                  }
                ],
                "template": [
                  {
                    "metadata": [
                      {
                        "annotations": {},
                        "generate_name": "",
                        "generation": 0,
                        "labels": {
                          "app": "prometheus-server"
                        },
                        "name": "",
                        "namespace": "",
                        "resource_version": "",
                        "uid": ""
                      }
                    ],
                    "spec": [
                      {
                        "active_deadline_seconds": 0,
                        "affinity": [],
                        "automount_service_account_token": true,
                        "container": [
                          {
                            "args": [
                              "--config.file=/etc/prometheus/prometheus.yml",
                              "--storage.tsdb.path=/prometheus/"
                            ],
                            "command": [],
                            "env": [],
                            "env_from": [],
                            "image": "prom/prometheus:latest",
                            "image_pull_policy": "Always",
                            "lifecycle": [],
                            "liveness_probe": [],
                            "name": "prometheus",
                            "port": [
                              {
                                "container_port": 9090,
                                "host_ip": "",
                                "host_port": 0,
                                "name": "",
                                "protocol": "TCP"
                              }
                            ],
                            "readiness_probe": [],
                            "resources": [
                              {
                                "limits": null,
                                "requests": null
                              }
                            ],
                            "security_context": [],
                            "startup_probe": [],
                            "stdin": false,
                            "stdin_once": false,
                            "termination_message_path": "/dev/termination-log",
                            "termination_message_policy": "File",
                            "tty": false,
                            "volume_mount": [
                              {
                                "mount_path": "/etc/prometheus/",
                                "mount_propagation": "None",
                                "name": "prometheus-config-volume",
                                "read_only": false,
                                "sub_path": ""
                              },
                              {
                                "mount_path": "/prometheus/",
                                "mount_propagation": "None",
                                "name": "prometheus-storage-volume",
                                "read_only": false,
                                "sub_path": ""
                              }
                            ],
                            "working_dir": ""
                          }
                        ],
                        "dns_config": [],
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": true,
                        "host_aliases": [],
                        "host_ipc": false,
                        "host_network": false,
                        "host_pid": false,
                        "hostname": "",
                        "image_pull_secrets": [],
                        "init_container": [],
                        "node_name": "",
                        "node_selector": {},
                        "priority_class_name": "",
                        "readiness_gate": [],
                        "restart_policy": "Always",
                        "security_context": [
                          {
                            "fs_group": "472",
                            "run_as_group": "",
                            "run_as_non_root": false,
                            "run_as_user": "",
                            "se_linux_options": [],
                            "supplemental_groups": [],
                            "sysctl": []
                          }
                        ],
                        "service_account_name": "",
                        "share_process_namespace": false,
                        "subdomain": "",
                        "termination_grace_period_seconds": 30,
                        "toleration": [],
                        "topology_spread_constraint": [],
                        "volume": [
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [
                              {
                                "default_mode": "0644",
                                "items": [],
                                "name": "prometheus-server-conf",
                                "optional": false
                              }
                            ],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "prometheus-config-volume",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          },
                          {
                            "aws_elastic_block_store": [],
                            "azure_disk": [],
                            "azure_file": [],
                            "ceph_fs": [],
                            "cinder": [],
                            "config_map": [],
                            "csi": [],
                            "downward_api": [],
                            "empty_dir": [
                              {
                                "medium": "",
                                "size_limit": ""
                              }
                            ],
                            "fc": [],
                            "flex_volume": [],
                            "flocker": [],
                            "gce_persistent_disk": [],
                            "git_repo": [],
                            "glusterfs": [],
                            "host_path": [],
                            "iscsi": [],
                            "local": [],
                            "name": "prometheus-storage-volume",
                            "nfs": [],
                            "persistent_volume_claim": [],
                            "photon_persistent_disk": [],
                            "projected": [],
                            "quobyte": [],
                            "rbd": [],
                            "secret": [],
                            "vsphere_volume": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_rollout": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "azurerm_kubernetes_cluster.aks",
            "module.prometheus.kubernetes_config_map.configmap"
          ]
        }
      ]
    },
    {
      "module": "module.prometheus",
      "mode": "managed",
      "type": "kubernetes_service",
      "name": "service",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "id": "monitoring/prometheus-service",
            "metadata": [
              {
                "annotations": {
                  "prometheus.io/port": "9090",
                  "prometheus.io/scrape": "true"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "prometheus-service",
                "namespace": "monitoring",
                "resource_version": "2321",
                "uid": "e69d7cf1-83cc-43a3-856e-4c7ec1a95ded"
              }
            ],
            "spec": [
              {
                "cluster_ip": "10.0.250.245",
                "external_ips": [],
                "external_name": "",
                "external_traffic_policy": "Cluster",
                "health_check_node_port": 0,
                "load_balancer_ip": "",
                "load_balancer_source_ranges": [],
                "port": [
                  {
                    "name": "",
                    "node_port": 30000,
                    "port": 8080,
                    "protocol": "TCP",
                    "target_port": "9090"
                  }
                ],
                "publish_not_ready_addresses": false,
                "selector": {
                  "app": "prometheus-server"
                },
                "session_affinity": "None",
                "type": "NodePort"
              }
            ],
            "status": [
              {
                "load_balancer": [
                  {
                    "ingress": []
                  }
                ]
              }
            ],
            "timeouts": null,
            "wait_for_load_balancer": true
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "azurerm_kubernetes_cluster.aks",
            "azurerm_resource_group.aks-rg"
          ]
        }
      ]
    },
    {
      "module": "module.prometheus-node-exporter",
      "mode": "managed",
      "type": "helm_release",
      "name": "prometheus-node-exporter",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "atomic": true,
            "chart": "prometheus-node-exporter",
            "cleanup_on_fail": true,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "prometheus-node-exporter",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.2.1",
                "chart": "prometheus-node-exporter",
                "name": "prometheus-node-exporter",
                "namespace": "monitoring",
                "revision": 1,
                "values": "{\"affinity\":{},\"configmaps\":[],\"endpoints\":[],\"extraArgs\":[],\"extraHostVolumeMounts\":[],\"hostNetwork\":false,\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"quay.io/prometheus/node-exporter\",\"tag\":\"latest\"},\"namespaceOverride\":\"\",\"nodeSelector\":{},\"podAnnotations\":{},\"podLabels\":{},\"prometheus\":{\"monitor\":{\"additionalLabels\":{},\"enabled\":false,\"namespace\":\"\",\"scrapeTimeout\":\"10s\"}},\"rbac\":{\"create\":true,\"pspEnabled\":true},\"resources\":{},\"securityContext\":{\"runAsNonRoot\":true,\"runAsUser\":65534},\"service\":{\"annotations\":{\"prometheus.io/scrape\":\"true\"},\"nodePort\":null,\"port\":9100,\"targetPort\":9100,\"type\":\"ClusterIP\"},\"serviceAccount\":{\"create\":true,\"imagePullSecrets\":[],\"name\":null},\"tolerations\":[{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}]}",
                "version": "2.0.3"
              }
            ],
            "name": "prometheus-node-exporter",
            "namespace": "monitoring",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "# Default values for prometheus-node-exporter.\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\nimage:\n  repository: quay.io/prometheus/node-exporter\n  tag: latest\n  pullPolicy: IfNotPresent\n\nservice:\n  type: ClusterIP\n  port: 9100\n  targetPort: 9100\n  nodePort:\n  annotations:\n    prometheus.io/scrape: \"true\"\n\nprometheus:\n  monitor:\n    enabled: false\n    additionalLabels: {}\n    namespace: \"\"\n\n    scrapeTimeout: 10s\n\nresources: {}\n  # We usually recommend not to specify default resources and to leave this as a conscious\n  # choice for the user. This also increases chances charts run on environments with little\n  # resources, such as Minikube. If you do want to specify resources, uncomment the following\n  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n  # limits:\n  #   cpu: 200m\n  #   memory: 50Mi\n  # requests:\n  #   cpu: 100m\n  #   memory: 30Mi\n\nserviceAccount:\n  # Specifies whether a ServiceAccount should be created\n  create: true\n  # The name of the ServiceAccount to use.\n  # If not set and create is true, a name is generated using the fullname template\n  name:\n  imagePullSecrets: []\n\nsecurityContext:\n  runAsNonRoot: true\n  runAsUser: 65534\n\nrbac:\n  ## If true, create \u0026 use RBAC resources\n  ##\n  create: true\n  ## If true, create \u0026 use Pod Security Policy resources\n  ## https://kubernetes.io/docs/concepts/policy/pod-security-policy/\n  pspEnabled: true\n\n# for deployments that have node_exporter deployed outside of the cluster, list\n# their addresses here\nendpoints: []\n\n# Expose the service to the host network\nhostNetwork: false\n\n## Assign a group of affinity scheduling rules\n##\naffinity: {}\n#   nodeAffinity:\n#     requiredDuringSchedulingIgnoredDuringExecution:\n#       nodeSelectorTerms:\n#         - matchFields:\n#             - key: metadata.name\n#               operator: In\n#               values:\n#                 - target-host-name\n\n# Annotations to be added to node exporter pods\npodAnnotations: {}\n\n# Extra labels to be added to node exporter pods\npodLabels: {}\n\n## Assign a nodeSelector if operating a hybrid cluster\n##\nnodeSelector: {}\n  # type : master\n#   beta.kubernetes.io/arch: amd64\n#   beta.kubernetes.io/os: linux\n\ntolerations:\n  - effect: NoSchedule\n    operator: Exists\n\n## Assign a PriorityClassName to pods if set\n# priorityClassName: \"\"\n\n## Additional container arguments\n##\nextraArgs: []\n#   - --collector.diskstats.ignored-devices=^(ram|loop|fd|(h|s|v)d[a-z]|nvme\\\\d+n\\\\d+p)\\\\d+$\n\n## Additional mounts from the host\n##\nextraHostVolumeMounts: []\n#  - name: \u003cmountName\u003e\n#    hostPath: \u003chostPath\u003e\n#    mountPath: \u003cmountPath\u003e\n#    readOnly: true|false\n#    mountPropagation: None|HostToContainer|Bidirectional\n\n## Additional configmaps to be mounted.\n##\nconfigmaps: []\n# - name: \u003cconfigMapName\u003e\n#   mountPath: \u003cmountPath\u003e\n\n## Override the deployment namespace\n##\nnamespaceOverride: \"\""
            ],
            "verify": false,
            "version": "2.0.3",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "azurerm_kubernetes_cluster.aks",
            "azurerm_resource_group.aks-rg"
          ]
        }
      ]
    }
  ]
}
